{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-10-27T01:55:23.292114+00:00",
  "repo": "cfrg/draft-irtf-cfrg-aead-limits",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 4,
      "id": "MDU6SXNzdWU2MTgxOTM2MjA=",
      "title": "Document different v and q use cases",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/4",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "`v` and `q` may vary depending on use case, and the bounds may simplify significantly depending on those bounds. For example, in QUIC, we assume `v >> q`, which lets us treat `v` as negligible compared to `v^2`.",
      "createdAt": "2020-05-14T12:34:46Z",
      "updatedAt": "2020-09-21T14:14:32Z",
      "closedAt": "2020-09-21T14:14:32Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "That's not quite the assumption for QUIC, as our recommendations result in `v =~ q`.\r\n\r\nThe simplification for CCM was possible because `2vl` was large (or `2ql` was large, pick one).",
          "createdAt": "2020-05-15T04:45:43Z",
          "updatedAt": "2020-05-15T04:45:43Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm... I'm now questioning this simplification. Let's assume `q=v`, yielding:\r\n\r\n```\r\nv + (2l * 2v)^2 <= p * 2^128\r\n=> v + (4lv)^2 <= p * 2^128\r\n=> v + 16l^2v^2 <= p * 2^128\r\n```\r\n\r\nIf `p = 2^-57` and `l=2^10`, then:\r\n\r\n```\r\nv + 16l^2v^2 <= 2^71\r\n=> v + 2^24v^2 <= 2^71\r\n```\r\n\r\nThe solution set to this inequality includes `v = 10000000`, which is fairly large in my opinion. That is, if we drop the first term (`v`), it seems like the bounds becomes much less tight. \r\n\r\nIf you agree with the above, how do you think we should proceed? I'm sort of leaning towards adjusting the QUIC bounds to include this term. \r\n",
          "createdAt": "2020-05-15T13:27:33Z",
          "updatedAt": "2020-05-15T13:27:33Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "The QUIC bounds are fine.  The final values are v=2^23.5 and q=2^23.  Plug those into the full advantage formula and you get:\r\n\r\n```js\r\nMath.log2(Math.pow(2, 23.5 - 128) + Math.pow(Math.pow(2, 11) * (Math.pow(2, 23.5) + Math.pow(2, 23)), 2) / Math.pow(2, 128))\r\n= -57.456893393672765\r\n```\r\n\r\nThat's a fair bit more than the target.\r\n\r\nNow, as to whether the simplification is generally useful, I don't know.  In your example v=1e7 (2^23.25, I assume is how you got there), the left hand side is 1677721600000010000000.  That extra 1e7 is hardly significant to the overall assessment.\r\n\r\n",
          "createdAt": "2020-05-18T01:41:53Z",
          "updatedAt": "2020-05-18T01:41:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "True -- I very much doubt it'll be a problem in practice. My concern lies in the message. That is, if a hypothetical QUIC connection were to count forgeries right up to the limit, and only update at that limit, an adversary gets an extra `v=1e7` attempts. \r\n\r\nThe forgery limit text currently only requires that endpoints update at some point before that limit. Maybe we can offer a RECOMMENDED value after which an update should be initiated?",
          "createdAt": "2020-05-18T13:08:12Z",
          "updatedAt": "2020-05-18T13:08:12Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "This is all against an advantage of 2^-57.  Going over and giving them 2^-56.8 is hardly going to be critical in protecting against a motivated attacker.  And any recommendation needs to be phrased in terms of round trip times rather than packet counts.",
          "createdAt": "2020-05-19T01:37:24Z",
          "updatedAt": "2020-05-19T01:37:24Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, I think we may disagree on that last point. The limits we're talking about here apply more directly to packet counts (assuming we're using the same definition for that). \r\n\r\nIn any case, I'll see if I can throw up a PR describing these different use cases shortly!",
          "createdAt": "2020-05-19T01:48:47Z",
          "updatedAt": "2020-05-19T01:48:47Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I understand that, but the problem is that the cases that matter involve asking your counterpart to make a change, which takes time, not packets.",
          "createdAt": "2020-05-19T02:26:15Z",
          "updatedAt": "2020-05-19T02:26:15Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think has been overcome by events. Closing for now.",
          "createdAt": "2020-09-21T14:14:32Z",
          "updatedAt": "2020-09-21T14:14:32Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "MDU6SXNzdWU2MjI1NzEzNzk=",
      "title": "Add a reference to RFC 8645",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/10",
      "state": "CLOSED",
      "author": "smyshsv",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Of course I can be biased here, but it seems to me that a reference to RFC 8645 can be very convenient in the draft, since it considers several ways to increase the bounds in some cases - such as hostile environments with adversaries with side-channel capabilities - particularily for GCM.",
      "createdAt": "2020-05-21T15:15:33Z",
      "updatedAt": "2021-07-19T21:46:57Z",
      "closedAt": "2021-07-19T21:46:57Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "No, that's a very good thing to add.  That is, the use of key updating is a great way to avoid exhaustion.  That's what TLS and QUIC do.  Let's try to work out how to fit a reference in.\r\n\r\nSeparately, I'd be interested in whether you think we need to do any analysis on the number of key updates that can be borne.  There is probably a limit, depending on how you update.  If the limit is practically unbounded (>2^128 would count, I think) as I expect, then that would be very good information.  However, if there are updating methods that are less robust, that would also be worth pointing at.",
          "createdAt": "2020-05-22T02:11:55Z",
          "updatedAt": "2020-05-22T02:11:55Z"
        },
        {
          "author": "smyshsv",
          "authorAssociation": "NONE",
          "body": "Dear Martin,\n\nMany thanks for your reply.\n\n1. Regarding your draft, it seems that external re-keying techniques (in\nterms of RFC 8645) can be referred to in general, with a possible\nadditional reference to GCM-ACPKM as an internally re-keyed mode with less\nstrict bounds, see slide 27 in\nhttps://datatracker.ietf.org/meeting/97/materials/slides-97-cfrg-on-re-keying-mechanisms-for-extending-the-lifetime-of-symmetric-keys-01\n.\n\nAlso it can be worth mentioning that side channel attacks can also be taken\ninto account while considering limits of usage of a single key.\n\n2. Regarding the number of key updates I would ask Liliya (one of main\ncontributors to RFC 8645) to comment.\nIn a personal communication she has reminded me about the bounds in the\npaper https://cseweb.ucsd.edu/~mihir/papers/rekey.pdf - the bounds which\nalso take the frequency of re-keying into account.\n\nI believe that Liliya would be able to give several deeper comments, taking\ninto account her great expertise in this field.\n\nKind regards,\nStanislav\n\nOn Fri, 22 May 2020 at 05:12, Martin Thomson <notifications@github.com>\nwrote:\n\n> No, that's a very good thing to add. That is, the use of key updating is a\n> great way to avoid exhaustion. That's what TLS and QUIC do. Let's try to\n> work out how to fit a reference in.\n>\n> Separately, I'd be interested in whether you think we need to do any\n> analysis on the number of key updates that can be borne. There is probably\n> a limit, depending on how you update. If the limit is practically unbounded\n> (>2^128 would count, I think) as I expect, then that would be very good\n> information. However, if there are updating methods that are less robust,\n> that would also be worth pointing at.\n>\n> \u2014\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chris-wood/draft-wood-cfrg-aead-limits/issues/10#issuecomment-632439200>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AIH5DJFD7BWQWX6ORP6EA63RSXNPPANCNFSM4NG5MKBQ>\n> .\n>\n",
          "createdAt": "2020-05-22T17:02:55Z",
          "updatedAt": "2020-05-22T17:02:55Z"
        },
        {
          "author": "smyshsv",
          "authorAssociation": "NONE",
          "body": "Dear Martin,\n\n1) More accurate security bounds specifically for GCM-ACPKM can be found in\nhttps://eprint.iacr.org/2017/697.pdf (see pages 14-15 for confidentiality\nand integrity). The link previously pointed by Stanislav contains the\nsecurity bound for another mode.\n\n2) The security of the externally re-keyed modes depends not on the number\nof key updates, but on the frequency of key updating and the total amount\nof processed data. The more frequent the key is updated, the more secure\n(but less efficient) the mode. The balance is needed in this case.\n\nRegarding the limit of key updates: unfortunately, we cannot say that this\nlimit is unbounded, and the security bound presented in\nhttps://cseweb.ucsd.edu/~mihir/papers/rekey.pdf (Theorem 4.1) confirms it.\nBut this bound is very simple and can be used to obtain less strict\nsecurity limits (for simplicity it is fair enough to assume the key update\nfunctions to be ideal). Although this bound is suitable for\nencryption modes only, I believe that the same theorem can be proven for\nAEAD modes (using the same technique).\n\nThere are different key updates constructions, with backward and forward\nsecurity, sequential and parallel, randomized and deterministic. All of\nthem have their advantages and disadvantages. RFC 8645 has a lot of\ndiscussion on this.\n\nBest regards,\nLiliya\n\n\n\u043f\u0442, 22 \u043c\u0430\u044f 2020 \u0433. \u0432 20:02, Stanislav V. Smyshlyaev <smyshsv@gmail.com>:\n\n> Dear Martin,\n>\n> Many thanks for your reply.\n>\n> 1. Regarding your draft, it seems that external re-keying techniques (in\n> terms of RFC 8645) can be referred to in general, with a possible\n> additional reference to GCM-ACPKM as an internally re-keyed mode with less\n> strict bounds, see slide 27 in\n> https://datatracker.ietf.org/meeting/97/materials/slides-97-cfrg-on-re-keying-mechanisms-for-extending-the-lifetime-of-symmetric-keys-01\n> .\n>\n> Also it can be worth mentioning that side channel attacks can also be\n> taken into account while considering limits of usage of a single key.\n>\n> 2. Regarding the number of key updates I would ask Liliya (one of main\n> contributors to RFC 8645) to comment.\n> In a personal communication she has reminded me about the bounds in the\n> paper https://cseweb.ucsd.edu/~mihir/papers/rekey.pdf - the bounds which\n> also take the frequency of re-keying into account.\n>\n> I believe that Liliya would be able to give several deeper comments,\n> taking into account her great expertise in this field.\n>\n> Kind regards,\n> Stanislav\n>\n> On Fri, 22 May 2020 at 05:12, Martin Thomson <notifications@github.com>\n> wrote:\n>\n>> No, that's a very good thing to add. That is, the use of key updating is\n>> a great way to avoid exhaustion. That's what TLS and QUIC do. Let's try to\n>> work out how to fit a reference in.\n>>\n>> Separately, I'd be interested in whether you think we need to do any\n>> analysis on the number of key updates that can be borne. There is probably\n>> a limit, depending on how you update. If the limit is practically unbounded\n>> (>2^128 would count, I think) as I expect, then that would be very good\n>> information. However, if there are updating methods that are less robust,\n>> that would also be worth pointing at.\n>>\n>> \u2014\n>> You are receiving this because you authored the thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/chris-wood/draft-wood-cfrg-aead-limits/issues/10#issuecomment-632439200>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AIH5DJFD7BWQWX6ORP6EA63RSXNPPANCNFSM4NG5MKBQ>\n>> .\n>>\n>\n",
          "createdAt": "2020-05-22T20:38:29Z",
          "updatedAt": "2020-05-22T20:38:29Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU2MjM3ODM3OTM=",
      "title": "Consider multi-user security implications",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/11",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Multi-user security [1,2,3] may affect the limits in this draft. [4] notes that, for AES-GCM, multi-user security limits which typically affect limits by a factor proportional to the number of users do not apply to TLS. This probably warrants further investigation for ChaCha20Poly1305 and AES-CCM. If we were to assume the folklore result (multiply the limit by \\mu), the result would be that QUIC would *not* reset counters after re-key operations. Whether or not we do that may have big implications on the limits, especially since the re-key count is unbounded (as far as I can tell). \r\n\r\nAs an aside, DTLS encodes the epoch in a 16-bit field, so that probably caps it at 2^16 possible re-key events. Maybe we need something for QUIC?\r\n\r\n[1] https://eprint.iacr.org/2016/564.pdf\r\n[2] https://eprint.iacr.org/2018/993.pdf\r\n[3] https://eprint.iacr.org/2017/435.pdf\r\n[4] https://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf",
      "createdAt": "2020-05-24T03:06:44Z",
      "updatedAt": "2020-06-19T01:10:53Z",
      "closedAt": "2020-06-19T01:10:52Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This was addressed by #15.",
          "createdAt": "2020-06-19T01:10:52Z",
          "updatedAt": "2020-06-19T01:10:52Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "MDU6SXNzdWU2MjM5MTMyNDc=",
      "title": "Consider combining confidentiality and integrity bounds for an AE bound",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/12",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[1] notes that bounds on confidentiality (IND-CPA) and integrity (IND-CXTX) success probability can be added to produce bounds on the AE security. Should we note this, and present that bound?\r\n\r\n[1] https://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf",
      "createdAt": "2020-05-24T17:59:10Z",
      "updatedAt": "2020-09-16T11:51:14Z",
      "closedAt": "2020-09-16T11:51:14Z",
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "I'd say it makes sense to note that the bounds can be combined. Not sure giving the bounds for each scheme adds much \u2013 also, were would one _not_ consider CA and IA separately?\r\n\r\nThat made me think: Should we have (semi-)formal definitions for the CA/IA bounds and AE security?",
          "createdAt": "2020-06-05T14:04:48Z",
          "updatedAt": "2020-06-05T14:04:48Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I'd say it makes sense to note that the bounds can be combined. Not sure giving the bounds for each scheme adds much \u2013 also, were would one not consider CA and IA separately?\r\n\r\nI don't have a use case in mind right now. I imagine applications would track both limits and then re-key whenever one's hit (or near being hit). Should we add recommendations for implementations here?\r\n\r\n> That made me think: Should we have (semi-)formal definitions for the CA/IA bounds and AE security?\r\n\r\nThat'd be good. Do you want to take a crack at this?",
          "createdAt": "2020-06-05T14:26:58Z",
          "updatedAt": "2020-06-05T14:26:58Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU2NTc1MDA2MzA=",
      "title": "Consider situations where AAD is non-negligible in length compared to the plaintext",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/16",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From Dan Harkins in the call. This could affect the presented limits.\r\n",
      "createdAt": "2020-07-15T16:50:03Z",
      "updatedAt": "2022-06-21T09:59:31Z",
      "closedAt": "2022-06-21T09:59:30Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "See https://tools.ietf.org/html/draft-ietf-ntp-using-nts-for-ntp-28 as another use case. From Hal Murray on the list:\r\n\r\n> NTP (Network Time Protocol) uses UDP which is easy to forge.  It's getting a \r\n> layer of authentication which uses AEAD.\r\n> \r\n> The basic NTP packet is 48 bytes.  NTS bumps that up to roughly 200.  The \r\n> client-to-server has no encryption.  The server-to-client encrypts roughly 100 \r\n> bytes.\r\n> \r\n> That 100 bytes is a cookie which also uses AEAD.  The cookie contains a \r\n> client-to-server and a server-to-client key for the above AEAD so the server \r\n> doesn't have to maintain any per-client state.  The cookie key is maintained \r\n> by the server.",
          "createdAt": "2020-07-30T12:20:15Z",
          "updatedAt": "2020-07-30T12:20:15Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as WONTFIX, since (a) not all published analyses make this distinction between AAD and plaintext length inputs, and (b) assuming AAD is part of the plaintext in practice likely does not have any substantial impact on key update or rotation logic.",
          "createdAt": "2022-06-21T09:59:30Z",
          "updatedAt": "2022-06-21T09:59:30Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "MDU6SXNzdWU2NTc1MDA5NzQ=",
      "title": "Discuss post-quantum threat model implications",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/17",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "help wanted"
      ],
      "body": "Per the CFRG interim meeting on 7/15.",
      "createdAt": "2020-07-15T16:50:34Z",
      "updatedAt": "2021-02-19T02:06:29Z",
      "closedAt": "2021-02-19T02:06:28Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "After discussion with @martinthomson and @fxguenther, we consider this to be out of scope. (Anything new here would likely require substantial analysis that does not yet exist.) Closing.",
          "createdAt": "2021-02-19T02:06:28Z",
          "updatedAt": "2021-02-19T02:06:28Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU2NTc1MDEyMDU=",
      "title": "Include SIV modes ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/18",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "help wanted"
      ],
      "body": "In particular AES-GCM-SIV, which already (happily) has bounds computed!",
      "createdAt": "2020-07-15T16:50:58Z",
      "updatedAt": "2022-01-14T00:53:28Z",
      "closedAt": "2022-01-14T00:53:28Z",
      "comments": []
    },
    {
      "number": 21,
      "id": "MDU6SXNzdWU2NjQxODU0OTI=",
      "title": "Citation for advantage relative to a random function",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/21",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I think that we are talking generically about IND-CCA(2) and IND-CPA when we define confidentiality advantage.\r\n\r\nSection 5.9 of [this](https://web.cs.ucdavis.edu/~rogaway/classes/227/spring05/book/main.pdf) might work as a reference, but it's light on detail and only talks about IND-CCA in an indirect manner.  That are probably better resources.",
      "createdAt": "2020-07-23T03:55:26Z",
      "updatedAt": "2020-09-16T11:51:19Z",
      "closedAt": "2020-09-16T11:51:19Z",
      "comments": []
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWU2NjQxODYxNzg=",
      "title": "Clearer explanations of q and v",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/22",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These are key parameters and we need to ensure that understanding is crisp.\r\n\r\nDavid McGrew notes:\r\n\r\n> The number q is defined both as the \"number of protected messages\u201d and \u201cencryption attempts\u201d; I think the former will make more sense to the reader.   It might be helpful to define q and v in terms of the number of invocations of the Authenticated Encryption and Authenticated Decryption functions from RFC5116.\r\n\r\nThis is right.  We might provide the definition in one form (to connect better with the reference material), but explain the practical consequences of this being that q/v also correspond to the number of invocations of the encryption/decryption function of the AEAD.",
      "createdAt": "2020-07-23T03:57:50Z",
      "updatedAt": "2020-09-16T11:51:36Z",
      "closedAt": "2020-09-16T11:51:36Z",
      "comments": []
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU2ODgyODEwNTU=",
      "title": "Highlight that bounds are derived from different papers with different models",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/24",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "... and we're just trying to harmonize everything, which may lead to some discrepancies.",
      "createdAt": "2020-08-28T18:35:58Z",
      "updatedAt": "2021-02-19T13:56:07Z",
      "closedAt": "2021-02-19T13:56:07Z",
      "comments": []
    },
    {
      "number": 28,
      "id": "MDU6SXNzdWU3NDUxNzk3NTQ=",
      "title": "Mattsson feedback",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/28",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "https://mailarchive.ietf.org/arch/msg/cfrg/x_M_WDJGqcJNvoqILDf4-75Mxqg/\r\n\r\nComments:\r\n\r\n-- \"plaintext, and optional associated data\"\r\n \r\nP and A are both optional in RFC 5116.\r\n\r\n\r\n-- It would be good if the document states that it only focuses on \"single forgery attacks\"\r\n\r\nI think some readers might believe that a second forgery is as hard as the first, which it is not. It it typically much easier. It might also vary drastically between algorithms as calculated in [1].\r\n\r\n\r\n-- I think the document should briefly explain the assumptions about the adversary. For both CA and IA, one assumption worth explaining is that the adversary has access to an encryption oracle and can freely encrypt chosen-plaintexts.\r\n\r\n\r\n-- The table defines l as \"length of each message\" while a paragraph further down writes \"maximum message size (l)\".\r\n\r\n\r\n-- \u201dpassive attacker\u201d\r\n\r\nFor a reader that does now the IND-CPA game by heart it might be good to point out that the \u201cpassive\u201d attacker does not just eavesdrop but also choses all the encrypted plaintexts.\r\n\r\n\r\n-- \u201cIntegrity limit (IL): The number ciphertexts an application can decrypt, either successfully or not\u201d\r\n\r\nThat IL also count successful decryptions seems to contradict other parts of the document that links IL to v which by definition only counts failed attempts.\r\n\r\n\r\n-- \u201cThis implies the following usage limit: q + s <= p^(1/2) * 2^(129/2) \u2013 1\u201d\r\n   \u201cThis implies the following limit: v <= (p * 2^127) / (l + 1)\u201d\r\n\r\nThis does not follow with the current definition of p (p = CA or p = IA). To make the inequalities hold I think you need to define p as:\r\n \r\n\"Upper bound on adversary attack success probability\"\r\n\r\njust like the parameter epsilon in [AEBounds].\r\n\r\n\r\n-- I think the document should briefly explain the assumptions about the algorithms. In [GCMProofs] it is e.g. assumed that AES is a PRP. Future cryptanalysis that does not make these ideal assumptions could make the limits worse.\r\n\r\n\r\n-- The document should make it clear that formulas for CA and IA (at least for GCM) are upper bounds. Future analysis could make the limits better. That they are just bounds also make any direct comparision between algorithms tricky as some bounds might be tigher than others.\r\n\r\n\r\n- The draft briefly mention that small limits lead to denial-of-service attacks. The DTLS 1.3 draft does that.\r\n\r\n\r\n-- The draft seems to make the assumption that l is fixed like n, k, r. I don't think this needs to be the case. My understanding is that for the GCM limits, l_max_allowed can be replaced by l_max_seen being the largest length processed. The encryption or decryption function would then terminate when CA or IA can not be verified to be under the chosen bound. This would make a big difference for applications typically processing much smaller messages than for example 2^14. For the CCM integrity bounds, the formula would probably have to involve (2 * l_max_allowed * q + 2 * l_max_seen_* v). The DoS problem would still be tied to l_max_allowed.",
      "createdAt": "2020-11-18T00:03:58Z",
      "updatedAt": "2021-02-19T13:55:57Z",
      "closedAt": "2021-02-19T13:55:57Z",
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "https://mailarchive.ietf.org/arch/msg/cfrg/Mf1MeM_NyRZVNlrRS9SvA8aioS0/\r\n\r\nSome more comments on the document:\r\n\r\n- \"However, in practice, there are often many users with\r\nindependent keys.  The \"multi-user\" security setting hence considers\r\nan attacker's advantage in breaking security of any of these many\r\nkeys, further assuming the attacker may have done some offline work\r\nto help break security.\"\r\n\r\nI think the term \"multi-user\" is a quite misleading term. It was coined by Belallare, Boldyreva, Micali trying to provide a theoretical framework against H\u00e5stad's attack on public key RSA and even then they used quotes (\"\") as a user might have several public keys. When applied to symmetric keys in security protocols with frequent rekeying it becomes a bit misleading as the attack scenario is really for multi-key and each user definitly has several keys. In strongly think the term \"multi-user\" should be replaced with \"multi-key\", but I know that \"multi-user\" is what is used i several academic papers... At a minimum I think you should define \"multi-user\" in terms of multiple keys and write that the keys can belong to one, two, or many users.\r\n\r\n\r\n- \"single-user\". I think this terminology should definitly go away. Luykx et al. use \"single-key\". When applied to e.g. TLS there is already 2 users.\r\n\r\n\r\n- \"Number of attacker forgery attempts (failed AEAD decryption invocations)\"\r\n\r\nNote that Iwata et al. defines q' as the number of decryption queries, while your document defines it as number of failed decryption queries. In theory that could mean that the inequality \r\n\r\nIA <= 2 * (v * (l + 1)) / 2^128\r\n\r\ndoes not hold anymore. In practice it holds anyway. I think you should keep the definition of v, but you should alert the reader that you have modified this, and maybe give some justification.\r\n\r\n\r\n- \"LS aims to keep CA below 2^-60 and IA below 2^-57\"\r\n\r\nThis indicates that you might want two different variables p_ca a p_ia for the two different bounds.\r\n\r\n\r\n- \"AES-GCM without nonce randomization is also discussed in [GCM-MU2], though this section does not include those results as they do not apply to protocols such as TLS 1.3 [RFC8446].\" \r\n\r\nThe negation of \"AES-GCM without nonce randomization\" is not well defined. It would be good to now if the results apply only for the constructions where the salt is secret (TLS 1.3, DTLS 1.3, QUIC, OSCORE), or only to constructions where the salt has the same length as the nonce, or if it apply to all constructions with a random component. It would be good if the document is also useful for protocols like ESP, SRTP, CMS, JOSE, COSE, etc...",
          "createdAt": "2020-11-27T08:26:06Z",
          "updatedAt": "2020-11-27T08:26:06Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "> I think you should define \"multi-user\" in terms of multiple keys and write that the keys can belong to one, two, or many users.\r\n\r\nYes.\r\n\r\n> This indicates that you might want two different variables p_ca a p_ia for the two different bounds.\r\n\r\nI don't think that is necessary.\r\n\r\n> The negation of \"AES-GCM without nonce randomization\" is not well defined. \r\n\r\nWe can, I believe, rely on the definitions in the citations for that. \r\n\r\n> It would be good to now if the results apply only for the constructions where the salt is secret \r\n\r\nThe salt does not need to remain secret, which is one of the more interesting and valuable results from that paper.  Worth pointing out.",
          "createdAt": "2020-12-06T22:23:43Z",
          "updatedAt": "2020-12-06T22:23:43Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "MDU6SXNzdWU4MjkxNTE2ODc=",
      "title": "Analyses assume perfect primitives",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/30",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need to document this fact because if the primitive is not perfect, then limits might be very different.",
      "createdAt": "2021-03-11T13:27:21Z",
      "updatedAt": "2021-03-18T12:39:32Z",
      "closedAt": "2021-03-18T12:39:32Z",
      "comments": []
    },
    {
      "number": 31,
      "id": "MDU6SXNzdWU4MjkxODg4NzE=",
      "title": "Rename branch to main",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/31",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "@chris-wood might have the keys here.  It's a fairly simple process if you have ownership rights.",
      "createdAt": "2021-03-11T14:10:43Z",
      "updatedAt": "2021-03-17T13:06:58Z",
      "closedAt": "2021-03-17T13:06:58Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Done.",
          "createdAt": "2021-03-17T13:06:58Z",
          "updatedAt": "2021-03-17T13:06:58Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU5MzY2MTY3NTM=",
      "title": "Produce some example values",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/34",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "A simple table of exemplary values under somewhat reasonable assumptions might help make the document more usable.\r\n\r\nLet's say that we pick `l` of 2<sup>11</sup> and AEA bound of 2<sup>-40</sup> and use the multi-user values.  That might produce some useful numbers for each of the different AEADs we analyze across a fair range of protocols.",
      "createdAt": "2021-07-05T02:13:21Z",
      "updatedAt": "2021-07-12T21:56:15Z",
      "closedAt": "2021-07-12T14:50:52Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "This is wrong, but I'm fixing it now.",
          "createdAt": "2021-07-12T21:56:15Z",
          "updatedAt": "2021-07-12T21:56:15Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "MDU6SXNzdWU5MzY2ODEzNTM=",
      "title": "Counting bytes",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/35",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The assumption we've adopted with this work is that the user will count AEAD seal/unseal operations.  Where application data bytes are counted, the most conservative approach is to set `l=1` and use the resulting limit to limit the number of bytes between rekey operations.  Obviously, this could grossly over-estimate the overheads involved and could result in very small limits in some cases.\r\n\r\nWhat do we want to say about this approach?  Is it a valid way to apply the advice?  I think the answer is probably yes, but do we want to explicitly say that?\r\n\r\nThere are a few things to consider here:\r\n\r\n* Is the difference really that bad?  For 128-bit blocks, the difference between counting 1 byte blocks could be a factor of 16 too high, which might seem bad, but given the numbers we're talking about, that's not going to make a huge difference in many cases.\r\n* If the approach leads to more frequent rekeying, is rekeying cheap enough to justify being so conservative?  If over-counting, then rekeying will occur too much, but maybe that's OK.  We're seeing in QUIC that rekeying doesn't happen enough in practice to shake bugs out of the system.\r\n* We might need to look at the analysis in light of this to ensure that we haven't assumed anything about the size of \"l\".  I don't think that we have, but double-checking seems prudent.",
      "createdAt": "2021-07-05T04:48:24Z",
      "updatedAt": "2021-07-12T21:58:00Z",
      "closedAt": "2021-07-12T21:58:00Z",
      "comments": []
    },
    {
      "number": 37,
      "id": "MDU6SXNzdWU5NDE5MzI0MjE=",
      "title": "John Mattsson's analysis",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/37",
      "state": "CLOSED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "In his [presentation](https://datatracker.ietf.org/meeting/110/materials/slides-110-saag-analysis-of-usage-limits-of-aead-algorithms-00.pdf) to SAAG at IETF 110 @emanjon made a few points regarding ChaCha/Poly and CCM_8 -- see slide 11 for the summary.  Have those being considered?",
      "createdAt": "2021-07-12T10:55:52Z",
      "updatedAt": "2022-07-11T12:21:50Z",
      "closedAt": "2022-07-11T12:21:49Z",
      "comments": [
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "When one plugs the numbers into the equations, CCM8\u2019s integrity limits effectively come out as tragically low.  The immediate consideration that comes to mind is if CCM8 is so fragile, its integrity should have been successfully broken many times over?   (Considering it is pretty widely deployed in the embedded world, it\u2019d seem that the surface should be large enough to make such attacks very practical.)  And yet, I couldn't find any published work that documents such an attack.  (To paraphrase [Fermi](https://en.wikipedia.org/wiki/Fermi_paradox): \"where is everybody?\u201d :-))  So, the subsequent thought is: is the model on which the equations are built correct?  Why are the number in such sharp contrast with the (naive) intuition that CBC-MAC should behave like a perfect MAC?\r\n",
          "createdAt": "2021-09-09T17:54:16Z",
          "updatedAt": "2021-09-09T17:54:16Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "So CCM8 does appear tragically weak.  It does that on the basis of an analysis that shows that it is nearly perfect.  That said, it's a fairly simplistic analysis; it's possible that tighter bounds exist that produce large values for *p* and *q*.\r\n\r\nDon't assume that the absence of attacks provides that something can't be attacked.  Consider incentives.  For attackers, most likely it just suggests that there are more fruitful avenues open to them.  For academics, demonstrating or theorizing about a brute force attack is hardly going to get a whole of attention or recognition.",
          "createdAt": "2021-09-10T00:15:48Z",
          "updatedAt": "2021-09-10T00:15:48Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> So CCM8 does appear tragically weak. It does that on the basis of an analysis that shows that it is nearly perfect. That said, it's a fairly simplistic analysis; it's possible that tighter bounds exist that produce large values for _p_ and _q_.\r\n\r\nThe thing is If we were really confident about the CCM8 IL figures, we should go and tell the industry they _must not_ use this anymore, and they are better off making sure that their boxes are either updated or nuked as soon as possible.  (And this would, at least, include the boxes that talk [DTLS-secured CoAP](https://datatracker.ietf.org/doc/html/rfc7252#section-9.1) and [OSCORE](https://datatracker.ietf.org/doc/html/rfc8613#section-3.2).)\r\n\r\nOTOH, if we are not sure that the numbers are right we should seek a more precise characterisation for the CCM8 limits.",
          "createdAt": "2021-09-10T11:53:41Z",
          "updatedAt": "2021-09-10T11:53:41Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yes, maybe we should be more confident in the analysis before upending an industry.  But it's hard work and wishful thinking won't make that work happen.  I would prefer to leave things as they stand, with the implication being that there is uncertainty about what means for people using CCM8.  We could point out what this might mean for users of CCM8, but I don't think that a CFRG document is the best place to make that point though.",
          "createdAt": "2021-09-13T01:06:43Z",
          "updatedAt": "2021-09-13T01:06:43Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Yes, maybe we should be more confident in the analysis before upending an industry. But it's hard work and wishful thinking won't make that work happen. I would prefer to leave things as they stand, with the implication being that there is uncertainty about what means for people using CCM8. We could point out what this might mean for users of CCM8, but I don't think that a CFRG document is the best place to make that point though.\r\n\r\nI agree. uta-tls13-iot-profile is probably the right place to make that fact clear (also pointing to Appendix B.2 of [NIST's recommendation for CCM](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38c.pdf)) and start some sort of soft deprecation.",
          "createdAt": "2021-09-28T19:46:19Z",
          "updatedAt": "2021-09-28T19:46:19Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing to keep the CCM8 analysis as it is now, since we want folks to think twice whenever they consider using it.",
          "createdAt": "2022-07-11T12:21:49Z",
          "updatedAt": "2022-07-11T12:21:49Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "MDU6SXNzdWU5ODk0ODI2MzY=",
      "title": "nonce length ",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/41",
      "state": "CLOSED",
      "author": "jsalowey",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The document only mentions the choice of nonce length in one place, section 6.1.  \r\n\r\n+ Nonce length should also be mentioned as r = 96 in section 5.1 as well.  \r\n+ I think the document should also have some discussion on the choice of nonce length and the limits since it some crypto implementations allow for the choice of nonce and some applications choose a nonce > 96 under the impression that bigger is better.  Adding something to the security considerations section seems appropriate:\r\n\r\n> This document assumes a nonce length of 96-bits for AES-GCM.  For nonces of other lengths the specification hashes the nonce input making analysis more difficult. [GCMProofs] shows that using a variable length nonce has worse security bounds for AES-GCM. \r\n\r\nIf there is other analyses on nonce length and AES-GCM limits that would be good to include those too. ",
      "createdAt": "2021-09-06T23:35:45Z",
      "updatedAt": "2021-09-07T13:23:42Z",
      "closedAt": "2021-09-07T13:23:42Z",
      "comments": []
    },
    {
      "number": 45,
      "id": "I_kwDOD64iO848MA1J",
      "title": "Provide more examples",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/45",
      "state": "OPEN",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "We want to compute the limits for [AES-GCM in (D)TLS 1.2](https://datatracker.ietf.org/doc/html/draft-ietf-uta-rfc7525bis-02#section-4.4).\r\n\r\nPreviously we thought the figures would be identical to 1.3, but then [\"Partial implicit nonces\"](https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/40) PR made us realise that things were slightly more complicated than we had anticipated.\r\n\r\nSo, I am looking at the inequalities in [Section 6.1](https://cfrg.github.io/draft-irtf-cfrg-aead-limits/draft-irtf-cfrg-aead-limits.html#section-6.1) for \"Protocols with random, partially implicit nonces\" -- and this one in particular:\r\n```\r\nAEA <= (((q+v)*o + (q+v)^2) / 2^(k+26)) + ((q+v)*l*B / 2^127)\r\n```\r\nFirst, fresh impression: once you go one step beyond the deceivingly simple math, there is a surprisingly high number of practical assumptions one needs to do in to pull out a number! :-)\r\n\r\nSo, before writing down any silly things in 7525bis, I'd like to validate my thought process with you.\r\n\r\nFirst of all, since the bounds are for a M-U context and I'd rather have results for single-user so that are comparable with the existing bounds for 1.3, is it possible to reuse the results for the special case M=1?  Or does that kill any fundamental premise which the analysis is built upon?\r\n\r\nAssuming it's OK (optimistic hat on):\r\n\r\n* o := q+v (attacker willing to spend the same effort as the legitimate user)\r\n* l := 2^7 (message size of one Internet MTU)\r\n* B := 1500/16*q (message size of one Internet MTU over 16 bytes AES block size)\r\n\r\nThen\r\n* q := v (equal proportions for q and v for DTLS)\r\n* v := 1 (one failed verification at most for TLS)\r\n\r\nAnd the sought after bounds:\r\n\r\n* AEA <= IA + CA ~= 1/2^56.8 (1/2^57 and 1/2^60 as per [Section 5.5 of RFC8446](https://datatracker.ietf.org/doc/html/rfc8446#section-5.5))\r\n\r\nWe can now plug all of the above into the [inequality](https://cfrg.github.io/draft-irtf-cfrg-aead-limits/draft-irtf-cfrg-aead-limits.html#section-6.1.1-7), which gives:\r\n\r\n* DTLS, AES-GCM-128: q = v = 2.3771*10^8 ~= 2^28\r\n* DTLS, AES-GCM-256: q = v = 2.3771*10^8 ~= 2^28\r\n* TLS, AES-GCM-128: q = 3.36173*10^8 ~= 2^28\r\n* TLS, AES-GCM-256: q = 3.36173*10^8 ~= 2^28\r\n\r\nIs this sensible?  Can you spot any flaws?\r\n\r\n\r\n",
      "createdAt": "2021-09-28T13:50:18Z",
      "updatedAt": "2022-07-11T12:22:44Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that it would make sense to pick values rounded to powers of 2 for simplicity.  That is, B = q.2^7 and IA and CA of 2^-57.\r\n\r\nWith that in mind, you have (for DTLS)\r\n\r\n```\r\n2^-57 >=  5q^2/2^154 +  2q^2.2^14/2^127\r\n      =~ (5 + 2^42).q^2/2^154\r\n```\r\nDropping the 5 as insignificant, that puts q at 2^27.5, which I guess confirms your answer.\r\n\r\nThe same numbers used with the single user analysis produce q =~ 2^28 and v =~ 2^63, so that is also consistent.\r\n\r\nYes, using this stuff in any sensible fashion requires assembling a massive pile of assumptions.  Most of them, like me dropping the 5, are small approximations that we make in order to make problems more tractable and usable.  But the targets are also loose and probabilistic.  When we set a target of 2^-57, we don't know for sure that that exact number is needed.  Indeed, that number is the product of nothing more than guesswork.\r\n\r\nThe goal is to ensure that we keep a sizeable safety margin; the size of that margin can be subjective.  For instance, if you want to use CCM_8 with a lower margin, this gives you the tools to set a margin according to your tolerance for risk and apply limits that will maintain that margin.",
          "createdAt": "2021-09-29T01:24:29Z",
          "updatedAt": "2021-09-29T01:24:29Z"
        },
        {
          "author": "thomas-fossati",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thanks very much for checking, really appreciated.  And thank you for the laudable initiative of funnelling & processing the available literature in a single document.\r\n\r\nAs an early user of this document, I might have a suggestion: it'd be good to collect \"common case\" values for the parameters in a table, so that one doesn't have to scan the document back and forth or make up their own, and possibly use those to provide simplified formulas --  e.g., something similar to [Appendix B.2 of NIST's CCM recommendations](https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38c.pdf#page=22).\r\n",
          "createdAt": "2021-09-29T10:49:21Z",
          "updatedAt": "2021-09-29T10:49:21Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "The examples were intended to be representative of some common and useful cases.  We could add more.",
          "createdAt": "2021-09-29T22:37:32Z",
          "updatedAt": "2021-09-29T22:37:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Reframing this issue to focus on providing more examples in the document. This would be nice to do, but is not necessary.",
          "createdAt": "2022-07-11T12:22:44Z",
          "updatedAt": "2022-07-11T12:22:44Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOD64iO85ek5CQ",
      "title": "GCM SU IA limit",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/55",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From Scott Fluhrer:\r\n\r\n> In section 5.1.2, you give IA = 2 * (v * (L+1)) / 2^128; however the cited paper (GCMProofs, Corollary 4) gives a second term for this; it is not obvious to me that the second term is always negligible.\r\n\r\nI couldn't work out why we eliminated the other term either.  It seems to me like that term is indeed relevant, or even dominant.\r\n\r\n![image](https://user-images.githubusercontent.com/67641/219195240-ae995f37-4dda-4c2e-b648-22ad96424f35.png)\r\n\r\nIs this a degenerate form of the MU results instead?  We have `AEA <= (q+v)*l*B / 2^127` there, which doesn't map to the IA result as far as I can see.\r\n\r\n",
      "createdAt": "2023-02-15T23:17:23Z",
      "updatedAt": "2023-04-25T20:45:53Z",
      "closedAt": "2023-04-25T20:45:52Z",
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "The bound is actually fine, since we're basing off Equation (22) in the paper which gives a better bound. I've added some explanation, cf. #57.",
          "createdAt": "2023-04-14T12:57:45Z",
          "updatedAt": "2023-04-14T12:57:45Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing as resolved by #57.",
          "createdAt": "2023-04-25T20:45:52Z",
          "updatedAt": "2023-04-25T20:45:52Z"
        }
      ]
    },
    {
      "number": 61,
      "id": "I_kwDOD64iO85qGTB7",
      "title": "Acknowledgements",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/61",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We don't acknowledge, but we could and probably should:\r\n\r\nAlexander Tereschenko\r\nScott Flurer\r\nJohn Mattsson\r\nThomas Fossati\r\n\r\nAnyone else?",
      "createdAt": "2023-06-29T02:58:39Z",
      "updatedAt": "2023-07-01T00:25:10Z",
      "closedAt": "2023-07-01T00:25:10Z",
      "comments": []
    },
    {
      "number": 65,
      "id": "I_kwDOD64iO86L_nit",
      "title": "[AEBounds] reference is a broken link",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/65",
      "state": "CLOSED",
      "author": "ctz",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "https://www.isg.rhul.ac.uk/~kp/TLS-AEbounds.pdf is a broken link for me, unfortunately.",
      "createdAt": "2024-06-12T12:56:19Z",
      "updatedAt": "2024-06-12T14:31:15Z",
      "closedAt": "2024-06-12T14:31:15Z",
      "comments": []
    },
    {
      "number": 67,
      "id": "I_kwDOD64iO86RgqhR",
      "title": "Review from Thomas Pornin",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/issues/67",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "page 3 (section 1): \"four inputs -- secret key, nonce, plaintext,\r\nassociated data (of which plaintext and associated data can optionally\r\nbe zero-length)\" -> RFC 5116 also allows the nonce to be zero-length\r\n(though it mandates, in that case, that the nonce must always be\r\nzero-length). (At the end of section 4, on page 8, it is explained that\r\nschemes with repeated nonce values, which cover the extreme case of no\r\nnonce at all, are out of scope of the document; this might be said\r\nearlier in the document)\r\n\r\npage 5 (table 1): the table talks about the AEAD \"block length\" but no\r\nnotion of what a block could be has been introduced at this point. In\r\nfact, blocks are not really defined anywhere in the document; each\r\nscheme-specific section indicates a block size without explaining where\r\nit comes from. In some cases it is even ambiguous, e.g. in the case of\r\nChaCha20+Poly1305 where ChaCha20 generates pseudorandom data in blocks\r\nof 512 bits, but Poly1305 consumes blocks of 128 bits.\r\n\r\npage 5 (section 3): \"passive attacker\" and \"active attacker\" -> the use\r\nof \"passive\" and \"active\" terms seems at bit at odds with the usual\r\nacceptions. Traditionally, a passive attacker only observes but does not\r\notherwise interact with the attacked system; the important distinction\r\nis that a number of contextual mitigations can thwart active attackers\r\n(e.g. the attacker's requests may show up in logs and traffic metrics),\r\ncontrary to passive attackers. Here, an attacker who can submit chosen\r\nplaintexts is considered \"passive\", which substantially differs from the\r\nusual terminology. The linked references ([AEComposition], [AEAD]) do\r\nnot use the terms \"active\" or \"passive\".\r\n\r\nI think the source of the use of \"passive\" here is that in order to\r\nanalyze the security of a non-interacting attacker who only observes\r\nplaintext/ciphertext pairs, then we have to make some assumptions on the\r\nformat of the plaintexts, which depends on the usage context. To ease\r\nanalysis, we then assume that the honest user is encrypting exactly the\r\nplaintexts that would most favour the attacker: we make a worst case\r\nassumption of the defender doing (unwittingly) the attacker's job and\r\nthus turning the passive (non-interacting) model into a chosen-plaintext\r\nattack model. I.e. we look at the non-interacting situation by stating\r\nthat it cannot be worse than an interacting chosen-plaintext situation,\r\nand it is the latter which we really study.\r\n\r\nSince the words \"active\" and \"passive\" appear only in section 3 but not\r\nin the rest of the document, I suggest rewording the text to remove them\r\naltogether; the more common and accurate terminology is\r\n\"chosen-plaintext attacks\" and \"chosen-ciphertext attacks\".\r\n\r\n\r\npage 9 (section 5.1): \"t = 128 [GCM]\" -> the [GCM] document (NIST SP\r\n800-38D) actually specifies tags of 128, 120, 112, 104, 96, 64 or 32\r\nbits (with some extra usage conditions for the 32-bit and 64-bit tags).\r\nIt is RFC 5116 which further constrains the tag size to be exactly 128\r\nbits, and no other size.\r\n\r\npage 9 (section 5.2): For ChaCha20+Poly1305, the first paragraph defines\r\nthat n = 512 (i.e. the ChaCha20 blocks), but within the same sentence\r\nproceeds to express the lengths of AAD and plaintext \"in blocks of 128\r\nbits\", which is quite confusing.\r\n\r\npage 10 (section 5.2.1): \"CA <= 0\" -> this is of course not true,\r\nstrictly speaking; the confidentiality advantage was defined (in section\r\n3) as the probability of an attacker distinguishing the ciphertext from\r\na random function output, which the attacker can always do with a very\r\nsmall but non-zero probability through guessing the key. What the\r\ndocument wants to say here is that the success probability of the\r\nattacker is negligible, or, more precisely, that \"guess the key\" is the\r\nbest attack under the assumption that ChaCha20 has PRF security, and\r\nchosen plaintext or ciphertext attacks do not improve the attacker's\r\nadvantage as long as the number of plaintext/ciphertext pairs remains\r\nbelow the birthday bound, which is ludicrously large for ChaCha20 thanks\r\nto its 512-bit blocks.\r\n\r\npage 13 (section 6.1): \"k = 128 or k = 256 for AEAD_AES_128_GCM and\r\nAEAD_AES_128_GCM respectively\" -> the second \"AEAD_AES_128_GCM\" should\r\nbe \"AEAD_AES_256_GCM\".\r\n\r\npage 15 (section 6.2.2): \"CA <= (o + q) / 2^247)\" -> there's a spurious\r\nclosing parenthesis at the end.\r\n\r\npage 17 (section 7): \"In particular, in two-party communication, one\r\nparticipant cannot regard apparent overuse of a key by other\r\nparticipants as being in error, when it could be that the other\r\nparticipant has better information about bounds.\" -> This strikes me as\r\na somewhat dangerous advice; it somehow reads as: \"you shall not use\r\nyour decryption key for more than q messages because allowing so would\r\nbe unsafe, but if you have more than q messages to decrypt, well, go for\r\nit, after all who knows, it's probably fine\". I am pretty sure some\r\nstandardization bodies (e.g. NIST) would frown upon that. If there is a\r\nlimit on decryption attempts, but implementations don't enforce it, then\r\nit's not a limit; it's just a commentary.\r\n\r\nIt is true that bounds may be revised and some usages that were\r\nconsidered potentially unsafe could turn out to be safe after all (and\r\nthe converse may also happen!). However, there is a different between\r\naccepting that implementations may have to be updated to account for new\r\nscientific results, and _dynamically_ assuming that the other party\r\nknows best even if no local update was applied.\r\n\r\npage 20 (acknowledgments): the document thanks \"Scott Flurer\", and while\r\nI cannot dismiss the possiblity that somebody called Flurer provided\r\ninput to the document, I must say that it might have been the well-known\r\ncryptographer \"Scott Fluhrer\", with an extra \"h\".",
      "createdAt": "2024-08-01T01:51:59Z",
      "updatedAt": "2024-10-10T01:38:01Z",
      "closedAt": "2024-10-10T01:38:01Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed by #68.",
          "createdAt": "2024-10-10T01:38:01Z",
          "updatedAt": "2024-10-10T01:38:01Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE2NTE3ODQ2",
      "title": "Edits",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/1",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Took a first pass through.  I made a bunch of inline edits with comments.  I will turn those into real issues when I get a chance, but I spent my time for today already.\r\n\r\nI thought the lib directory was accidentally loaded, but it turns out that it was accidentally checked in instead.\r\n\r\nBTW, you should make this draft-wood-*.  We don't need to follow crypto conventions, and I have barely done any work \u00af\\_(\u30c4)_/\u00af",
      "createdAt": "2020-05-12T06:36:14Z",
      "updatedAt": "2021-03-17T13:06:28Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "59ae2a71b299602fc5f738f2d05f1c511f3bd997",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "edits",
      "headRefOid": "4a5bf1035bb33fa4b1226b0ceafc022832ef195b",
      "closedAt": "2020-05-12T15:29:06Z",
      "mergedAt": "2020-05-12T15:29:06Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "80ba1c0108fc026f5d17a6841c4546f538c33d42"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> BTW, you should make this draft-wood-*. We don't need to follow crypto conventions, and I have barely done any work \u00af_(\u30c4)_/\u00af\r\n\r\nI prefer alphabetical order since we're in this together, but if you're not comfortable with draft-thomson, I'll rename it!",
          "createdAt": "2020-05-12T15:29:03Z",
          "updatedAt": "2020-05-12T15:29:03Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE3MDM0NjU0",
      "title": "Lint fixes and some editorial updates.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/2",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "> So p is either CA or IA here.  Do we need to use two characters instead (c\r\n> and i for confidentiality and integrity? e and d for encryption and\r\n> decryption?  s and o for seal and open?)\r\n\r\nI think using separate terms for confidentiality and integrity attack success probability is good -- pC and pI make sense.\r\n\r\n> It seems like the analysis in AEBounds didn't really consider the role that\r\n> the AAD plays in all of this.  What do we want to say about the simplifying\r\n> assumptions here?\r\n\r\nI went back and checked the Iwata paper, which seems to state that the length in their advantage calculations is the sum of AAD and ciphertext/plaintext sent to each oracle query. So, I think we can simplify this an say that l includes the AAD.\r\n\r\nOn the combined confidentiality and integrity limit, I'm not yet sure how I feel about this. If it's the *lower* of the two, then I think it's OK. But that's not clear to me. I'll see if I can find out more details.\r\n\r\n",
      "createdAt": "2020-05-12T23:55:49Z",
      "updatedAt": "2020-05-13T12:35:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "be9e1f8f810b636cb84d8f2f0c58ced1b094a9f2",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/small-updates",
      "headRefOid": "3015710ab27f0e7636e5b6b5a35244351285057f",
      "closedAt": "2020-05-13T04:48:51Z",
      "mergedAt": "2020-05-13T04:48:51Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "0a03e7ac77ccc9740cf9d0a57305b25c953277d4"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "The CCM analysis appears to do the same with their definition of \\Beta.  But the overall calculations include |\\Beta| + |m|, which counts the message length twice, but the AAD length once.  We might simplify and say that the AAD is counted twice, as we did for QUIC, but probably should be explicit.",
          "createdAt": "2020-05-13T04:56:47Z",
          "updatedAt": "2020-05-13T04:56:47Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah, yes, good suggestion!",
          "createdAt": "2020-05-13T12:35:33Z",
          "updatedAt": "2020-05-13T12:35:33Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE3NjIzMzcz",
      "title": "Include simplifying assumptions for CCM, and fill out the limit",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/3",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I didn't drop the term `(v / 2^t)` since, when including it, I don't think it turns out to be negligible. In particular, here's the steps I followed:\r\n\r\n```\r\n(v / 2^t) + (2l * (v + q))^2 / 2^n <= p\r\n=> (v / 2^128) + (2l * (v + q))^2 / 2^128 <= p\r\n=> v + (2l * (v + q))^2 <= 2^128 * p\r\n```\r\n\r\nIf l is small, the first term becomes pretty important. What do you think?",
      "createdAt": "2020-05-13T21:29:38Z",
      "updatedAt": "2021-03-17T13:06:29Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "1888b59ad7dcafdb1e1d7cf8071b1d07555a763d",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/ccm-full",
      "headRefOid": "a94669824479ba7d53d25aec4ef99b0b0abe4ee7",
      "closedAt": "2020-05-14T12:33:19Z",
      "mergedAt": "2020-05-14T12:33:19Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "31e2738b9d0e226e314fe43708c370fd22c9b313"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "If `v` is large, then `v^2` will still likely dominate.  \r\n\r\nI guess that if `l` is very small (1 is the minimum), and you are in a setting where `v` can reasonably be small, then the full formula makes sense. But `v` needs to be very small.  And that assumes that `q` is also very small.\r\n\r\nIn a setting where you care about `v`, a small value (here, I'm thinking `v=2^8` or less), means exposure to DoS at that cost.  For something like QUIC, I don't think we could deploy with v < 1000 or it would be too easy to shut down active connections.  At that point, the difference in terms is at least 2^22 times.  That's negligible as far as I'm concerned.\r\n\r\nThat lends the full formula more to settings like email or messaging, where volumes are small and exceeding `v` would be stopped on other grounds before even attempting decryption.\r\n\r\nSo I think that there is still value in further simplification, because things like DTLS and QUIC rely on getting to a large `v`.  Settings that want to set an extremely low tolerance for crap might need to consider the full expression.",
          "createdAt": "2020-05-14T01:50:03Z",
          "updatedAt": "2020-05-14T01:50:03Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "For the purpose of this draft, would it make sense to write the limit in full and then give examples of how it can be simplified? For example, we can list QUIC as an example where v >>q, which lets us drop the first term. ",
          "createdAt": "2020-05-14T03:23:52Z",
          "updatedAt": "2020-05-14T03:23:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Cool. I'll merge as-in, and file an issue to simplify further depending on use cases.",
          "createdAt": "2020-05-14T12:33:14Z",
          "updatedAt": "2020-05-14T12:33:14Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE3OTczMTA2",
      "title": "Add AEAD_AES_128_CCM_8 derivation.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/5",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-14T12:47:13Z",
      "updatedAt": "2021-03-17T13:06:29Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "31e2738b9d0e226e314fe43708c370fd22c9b313",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/ccm-8",
      "headRefOid": "50469f3bf5fbbfe19beec822499c00ed8d0ae913",
      "closedAt": "2020-05-15T00:14:30Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in favor of #6.",
          "createdAt": "2020-05-15T00:14:29Z",
          "updatedAt": "2020-05-15T00:14:29Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE4MzA0MzM5",
      "title": "Moar editz",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/6",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-15T00:00:20Z",
      "updatedAt": "2021-03-17T13:06:31Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "31e2738b9d0e226e314fe43708c370fd22c9b313",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "moar-editz",
      "headRefOid": "a1d224ca4f7ef459b1198fb34923f46f778f5ea6",
      "closedAt": "2020-05-15T00:14:54Z",
      "mergedAt": "2020-05-15T00:14:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "020945e07da2a2bb78a9a2b1822e12c54c650c25"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjY2Njkz",
          "commit": {
            "abbreviatedOid": "a1d224c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-15T00:13:16Z",
          "updatedAt": "2020-05-15T00:14:48Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "\ud83d\udc4d ",
              "createdAt": "2020-05-15T00:13:16Z",
              "updatedAt": "2020-05-15T00:14:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE4NTc5MjMz",
      "title": "Fix small error in CCM simplification.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/7",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "For clarity, here's what I did:\r\n\r\n```\r\n(2l*(v+q))^2 <= p*2^128\r\n=> 2l*(v+q) <= p^(1/2)*2^64\r\n=> v+q <= (p^(1/2)*2^63) / l\r\n```",
      "createdAt": "2020-05-15T13:01:01Z",
      "updatedAt": "2020-05-18T01:43:04Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "020945e07da2a2bb78a9a2b1822e12c54c650c25",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/nit",
      "headRefOid": "dfd8c2f3ea1d3cf160cb79c14c388b26195c9595",
      "closedAt": "2020-05-18T01:32:57Z",
      "mergedAt": "2020-05-18T01:32:57Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "d7991241b8eb7229317bdddbffa4884dc5ca5e25"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMjI2MTY1",
          "commit": {
            "abbreviatedOid": "dfd8c2f"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Times 2, squared, same thing.",
          "createdAt": "2020-05-18T01:32:52Z",
          "updatedAt": "2020-05-18T01:32:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0NDE5NTUxMTUy",
      "title": "Add Felix as an author.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/8",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @fxguenther",
      "createdAt": "2020-05-18T14:47:42Z",
      "updatedAt": "2021-03-17T13:06:31Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "d7991241b8eb7229317bdddbffa4884dc5ca5e25",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/add-felix",
      "headRefOid": "b5eabebd1e33206ef8d466f8369e2d27856b2fda",
      "closedAt": "2020-05-19T01:38:14Z",
      "mergedAt": "2020-05-19T01:38:14Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "f8c47b4920c1bf6931460103f00c6ac272fd4f25"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@martinthomson, do you want to merge this and then submit -00?",
          "createdAt": "2020-05-18T15:43:50Z",
          "updatedAt": "2020-05-18T15:43:50Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Let's open the repo, then we can use the CI to do the submission for us.",
          "createdAt": "2020-05-19T01:38:35Z",
          "updatedAt": "2020-05-19T01:38:35Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Let's open the repo, then we can use the CI to do the submission for us.\r\n\r\nDone!",
          "createdAt": "2020-05-19T01:47:07Z",
          "updatedAt": "2020-05-19T01:47:07Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIwMzg5NjU1",
      "title": "Fix AES-GCM bound typo (7 != 9).",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/9",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @fxguenther ",
      "createdAt": "2020-05-19T22:05:09Z",
      "updatedAt": "2021-03-17T13:06:31Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "c413a2d5f4bcb612d93d2815a9a9974e419ff033",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/typos",
      "headRefOid": "0dce29bc6efad35eaae0cff4c62e254b0b67affc",
      "closedAt": "2020-05-19T23:40:18Z",
      "mergedAt": "2020-05-19T23:40:18Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "5b6bfe032cbee1119d63009fcad47632e3a1127f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 13,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIzNTc2NTkx",
      "title": "Fix typo in CCM limit.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/13",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Whoops!",
      "createdAt": "2020-05-27T03:01:58Z",
      "updatedAt": "2021-03-17T13:06:32Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "da0e734e0e576ede72bfb0fe9943f2afcdf62c9a",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/typo",
      "headRefOid": "cd12a9d810fae10ea8eca899b6cc151ced84275d",
      "closedAt": "2020-05-27T03:06:54Z",
      "mergedAt": "2020-05-27T03:06:54Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "7f4a616cebc3d0d459f545743dcc417f870e404c"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm not sure I would characterize this as a typo, but yes, this is better.",
          "createdAt": "2020-05-27T03:07:11Z",
          "updatedAt": "2020-05-27T03:07:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0NDIzNTc4NDcx",
      "title": "Use <= rather than = for the advantages",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/14",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-05-27T03:09:28Z",
      "updatedAt": "2021-03-17T13:06:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "7f4a616cebc3d0d459f545743dcc417f870e404c",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "lte",
      "headRefOid": "11dcc96491444e1afdc09b4f4991f0c359070d3d",
      "closedAt": "2020-05-27T11:59:30Z",
      "mergedAt": "2020-05-27T11:59:30Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c1db54dcf3b2c6f6b36de2e2ab816d7de827e984"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MTIwMDg1",
          "commit": {
            "abbreviatedOid": "11dcc96"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-05-27T11:59:25Z",
          "updatedAt": "2020-05-27T11:59:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "MDExOlB1bGxSZXF1ZXN0NDMyNjc0NDAw",
      "title": "First cut at multi-user security content.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/15",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I'm not overly fond of the simplifications here, but I think it's probably sufficient for our purposes. One thing that's not clear to me is the extent to which we want to discuss the implications of mu settings.\r\n\r\nAnyway, this is just something to get us started. Please have a look!",
      "createdAt": "2020-06-10T20:11:55Z",
      "updatedAt": "2021-03-17T13:06:34Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "c1db54dcf3b2c6f6b36de2e2ab816d7de827e984",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/mu-draft",
      "headRefOid": "4b1ed32d55769ae38c992bcde27da8a6c6024cc5",
      "closedAt": "2020-06-17T01:37:43Z",
      "mergedAt": "2020-06-17T01:37:43Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "963ae58501db91ff5057347307043df5322fee9c"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Oh, by the way, I think we should merge these changes and rev the document before we submit the QUIC PR. (That'll let us point to this as a reference.)",
          "createdAt": "2020-06-10T22:52:59Z",
          "updatedAt": "2020-06-10T22:52:59Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Promoting to real PR. I think this is ready.",
          "createdAt": "2020-06-16T13:22:55Z",
          "updatedAt": "2020-06-16T13:22:55Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjExMzIy",
          "commit": {
            "abbreviatedOid": "12c4561"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Is there value in pointing out that key rotation within a single context can be useful in ensuring that attacker advantage remains limited, and in that context you can treat the multiple keys used in that context as a narrow multi-user context with a number of users equal to the number of keys.  Using the multi-user analysis provides usage limits across all of the keys in the context.  These limits should be smaller, but they should also ensure that key updates are effective in keeping the attacker advantage bounded.",
          "createdAt": "2020-06-11T05:56:07Z",
          "updatedAt": "2020-06-11T06:15:49Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n    title: \"Public-Key Encryption in a Multi-user Setting: Security Proofs and Improvements\"\r\n```",
              "createdAt": "2020-06-11T05:56:07Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 36,
              "body": "I think that we want to break this out into a different paragraph at a minimum.\r\n\r\nThe way that I explain mu limits is to talk about \"any\" vs. \"specific\".  That is, if you care about the confidentiality of communications in the aggregate, you have to consider all users, both individually and in groups.  The multi-user setting considers the possibility that an attacker might want to attack any user from a group.  This is different than the single-user setting where we consider the advantage an attacker gains against a specific user because the attacker doesn't care which user gets hit.\r\n\r\nThen you can say that an analysis based on a group that includes all users, recognizing that this is the pessimal case, might be performed to determine numbers.  However, the target for attacker advantage in that context might be different than targets in the single-user context.",
              "createdAt": "2020-06-11T06:02:07Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 61,
              "body": "These are single-key, not single-user, right?",
              "createdAt": "2020-06-11T06:02:31Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 113,
              "body": "We need to explain why we think that this is the case, or what limits we place on different values.",
              "createdAt": "2020-06-11T06:04:06Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 52,
              "body": "Don't we need 'u' as well?",
              "createdAt": "2020-06-11T06:04:55Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 139,
              "body": "\"currently\"",
              "createdAt": "2020-06-11T06:07:11Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 142,
              "body": "So what you are saying is that limits are shared across every user (or key)?  That implies that if we want to preserve a 2^-57 limit on probability, then generally the limit degrades linearly with `u`.\r\n\r\nThe more interesting case here is the CCM `v + q <= p^(1/2) * ?? / l` which suggests that limits are reduced by the square root of `u`.  It might be worth spelling that out.",
              "createdAt": "2020-06-11T06:11:29Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTE5OTg0",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-11T13:40:27Z",
          "updatedAt": "2020-06-11T13:40:27Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "As asked on the email, I don't understand how you're distinguishing between these two. (To me, they're the same.)",
              "createdAt": "2020-06-11T13:40:27Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTIwMTQ1",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-11T13:40:38Z",
          "updatedAt": "2020-06-11T13:40:38Z",
          "comments": [
            {
              "originalPosition": 113,
              "body": "Good call. I'll add some color!",
              "createdAt": "2020-06-11T13:40:38Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTIwMzA3",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-11T13:40:48Z",
          "updatedAt": "2020-06-11T13:40:49Z",
          "comments": [
            {
              "originalPosition": 52,
              "body": "Yep!",
              "createdAt": "2020-06-11T13:40:48Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTIxOTU4",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-11T13:41:56Z",
          "updatedAt": "2020-06-11T13:41:56Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "That's right -- and using CCM here is definitely better for the reason you point out! I'll include it alongside AEAD_CHACHA20_POLY1305 so we're complete.",
              "createdAt": "2020-06-11T13:41:56Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDQzMTQ4",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-12T03:48:12Z",
          "updatedAt": "2020-06-12T03:48:13Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "It seems to me that the reason the limits on ChaCha are poor is that we don't have a goodd analysis.",
              "createdAt": "2020-06-12T03:48:12Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDQzNTEy",
          "commit": {
            "abbreviatedOid": "0e0f3e9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-12T03:49:37Z",
          "updatedAt": "2020-06-12T03:49:37Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "Yep, that\u2019s right!",
              "createdAt": "2020-06-12T03:49:37Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDc3ODg2",
          "commit": {
            "abbreviatedOid": "429ff16"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T00:23:06Z",
          "updatedAt": "2020-06-16T00:23:06Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "I think this is resolved now. @martinthomson, please have a look!",
              "createdAt": "2020-06-16T00:23:06Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTc0NzM5",
          "commit": {
            "abbreviatedOid": "429ff16"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This is looking good.  I'm not sure about the calculation of the confidentiality limit for GCM though.",
          "createdAt": "2020-06-16T05:42:46Z",
          "updatedAt": "2020-06-16T06:01:42Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nattacker is assumed to have done some offline work to help break security of\r\nsingle key (or user), where the attacker cannot choose which key is attacked. As a result, AEAD algorithm limits may\r\n```\r\n\r\nOr something like that.",
              "createdAt": "2020-06-16T05:42:46Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n| u | Number of users or keys (multi-user setting only) |\r\n```",
              "createdAt": "2020-06-16T05:43:04Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 75,
              "body": "\"public-key\"?",
              "createdAt": "2020-06-16T05:43:17Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 91,
              "body": "We need to call out that this depends on nonce-randomization, as used in TLS.  The limits are dramatically different if nonces are repeated, right?  The paper shows that this reduces to `u(u+p)/2^k + \\sigma^2/2^n` which is pretty poor.",
              "createdAt": "2020-06-16T05:46:53Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 99,
              "body": "I'm not sure that this equation is right.\r\n\r\nThe value you are trying to include is `\\sigma.B/2^n`, right?  And you are setting \\sigma to the total number of blocks in both encryption and forgery queries, which I make out to be `(v + q) * l`.  That suggests to me that you could write this as `((v + q) * l)^2/u/2^128` (using `\\sigma = uB`).  That produces a very different limit of `(p * u * 2^128)^0.5/l`.",
              "createdAt": "2020-06-16T05:58:34Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 140,
              "body": "Hah, in other words, it's not worth worrying about :)",
              "createdAt": "2020-06-16T05:59:24Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 152,
              "body": "No confidentiality limit?",
              "createdAt": "2020-06-16T06:00:27Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            },
            {
              "originalPosition": 156,
              "body": "that's 8l and not 81?  It might pay to just use 2^103 then.",
              "createdAt": "2020-06-16T06:00:53Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDcyMzk1",
          "commit": {
            "abbreviatedOid": "429ff16"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T12:55:48Z",
          "updatedAt": "2020-06-16T12:55:48Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "Yep -- I made the wrong simplifying assumption. If we just assume B = \\sigma/u, then I get what you have. I'll update accordingly.",
              "createdAt": "2020-06-16T12:55:48Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDg2Mjc5",
          "commit": {
            "abbreviatedOid": "46e6ff3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T13:11:52Z",
          "updatedAt": "2020-06-16T13:11:53Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Yeah, their paper doesn't talk about the secret-key setting.",
              "createdAt": "2020-06-16T13:11:53Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDg4NDQ0",
          "commit": {
            "abbreviatedOid": "46e6ff3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T13:14:24Z",
          "updatedAt": "2020-06-16T13:14:24Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Good point. I'll note that AES-GCM without nonce randomization is out of scope.",
              "createdAt": "2020-06-16T13:14:24Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDkzOTgz",
          "commit": {
            "abbreviatedOid": "46e6ff3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T13:20:28Z",
          "updatedAt": "2020-06-16T13:20:28Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "Good call -- I'll make that change here and above.",
              "createdAt": "2020-06-16T13:20:28Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDk0MjYy",
          "commit": {
            "abbreviatedOid": "46e6ff3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T13:20:45Z",
          "updatedAt": "2020-06-16T13:20:45Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "I meant to write \"combined integrity and confidentiality\" limit -- I'll fix that.",
              "createdAt": "2020-06-16T13:20:45Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDk0Mzg5",
          "commit": {
            "abbreviatedOid": "46e6ff3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-06-16T13:20:52Z",
          "updatedAt": "2020-06-16T13:20:53Z",
          "comments": [
            {
              "originalPosition": 140,
              "body": ":)",
              "createdAt": "2020-06-16T13:20:52Z",
              "updatedAt": "2020-06-17T01:01:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU1NDYyMTE1",
      "title": "Add some dates",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/19",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "And use a DOI rather than maintain a reference for Poly1305.",
      "createdAt": "2020-07-23T03:35:41Z",
      "updatedAt": "2020-07-30T12:16:02Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "e0e12e3fbee2f46a11c8df9dca0f48ca16a95c7a",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "date-gcmproofs",
      "headRefOid": "dd4eabcca096af94af31e86a2fee80f8fad3adc4",
      "closedAt": "2020-07-30T12:16:02Z",
      "mergedAt": "2020-07-30T12:16:02Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ed729206227303f50fe359951c95cd82fbf2d17d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzQyODE5",
          "commit": {
            "abbreviatedOid": "dd4eabc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-07-30T12:15:58Z",
          "updatedAt": "2020-07-30T12:15:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU1NDYzNzY0",
      "title": "Rewrap equations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/20",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These were LONG",
      "createdAt": "2020-07-23T03:43:14Z",
      "updatedAt": "2020-07-30T12:16:15Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "e0e12e3fbee2f46a11c8df9dca0f48ca16a95c7a",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "rewrap-eqn",
      "headRefOid": "916c3f4ce0c2c9c5b55c11c982e8ff4cf9d13459",
      "closedAt": "2020-07-30T12:16:15Z",
      "mergedAt": "2020-07-30T12:16:15Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "303c8459b63343bcb0fa0558305825bfbab9d0cc"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "MDExOlB1bGxSZXF1ZXN0NDU1NDc3NTEx",
      "title": "A few nits from David",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/23",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-07-23T04:45:24Z",
      "updatedAt": "2020-07-30T12:19:24Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "e0e12e3fbee2f46a11c8df9dca0f48ca16a95c7a",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "mcgrew-adoption",
      "headRefOid": "7673a05d435cbeed536b2112ce6834e80bb3a3d3",
      "closedAt": "2020-07-30T12:19:24Z",
      "mergedAt": "2020-07-30T12:19:24Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2a2a1480d6607ed01b608368e08fc887b04cf9b3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0NDg2NDk0MTM3",
      "title": "AE advantage/limits, wording, typos",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/25",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses issues #12, #21, #22 ",
      "createdAt": "2020-09-14T10:03:15Z",
      "updatedAt": "2020-09-16T13:40:25Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "533cb5ab97f200eba642054ff603c23f31363c6b",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "wording-typos",
      "headRefOid": "b7ddd016a3b15068b602fc056033dbe7284e5eb3",
      "closedAt": "2020-09-16T11:46:27Z",
      "mergedAt": "2020-09-16T11:46:27Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "06405638154afdf8d635a39c17775374db62151f"
      },
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "> This LGTM with the suggested changes! Thanks, @fxguenther. Per #21, should we also include a reference for the IND-CTXT and IND-CPA properties?\r\n\r\nGood point, I added references now (b7ddd01)",
          "createdAt": "2020-09-16T09:25:47Z",
          "updatedAt": "2020-09-16T09:25:47Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjM5MDA3",
          "commit": {
            "abbreviatedOid": "f782d9f"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This is good stuff.  Thanks for doing it.",
          "createdAt": "2020-09-15T00:18:39Z",
          "updatedAt": "2020-09-15T00:22:53Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "...in the single-user setting.",
              "createdAt": "2020-09-15T00:18:39Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 91,
              "body": "Maybe reword:\r\n\r\n```suggestion\r\n- Confidentiality limit (CL): The number of messages an application can encrypt\r\n  before giving the adversary a confidentiality advantage higher than CA.\r\n```\r\n\r\nThen below:\r\n\r\n```\r\nWhen limits are expressed as a number of messages, this requires assumptions about\r\nthe size of messages and any authenticated additional data (AAD).  Limits can instead\r\nbe expressed in terms of the number of plaintext bytes and maybe AAD bytes in total.\r\n```",
              "createdAt": "2020-09-15T00:20:05Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 105,
              "body": "```suggestion\r\n  number of ciphertexts an application can encrypt or decrypt before giving the adversary\r\n```",
              "createdAt": "2020-09-15T00:22:20Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 106,
              "body": "```suggestion\r\n  an authenticated encryption advantage higher than AEA.\r\n```",
              "createdAt": "2020-09-15T00:22:28Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Njc5NTU2",
          "commit": {
            "abbreviatedOid": "f782d9f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-15T13:26:01Z",
          "updatedAt": "2020-09-15T13:26:02Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nconfidentiality and integrity against an active attacker. Specifically:\r\n```",
              "createdAt": "2020-09-15T13:26:01Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Njc5ODAw",
          "commit": {
            "abbreviatedOid": "f782d9f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This LGTM with the suggested changes! Thanks, @fxguenther. Per #21, should we also include a reference for the IND-CTXT and IND-CPA properties?",
          "createdAt": "2020-09-15T13:26:18Z",
          "updatedAt": "2020-09-15T13:31:37Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n- Confidentiality advantage (CA): The probability of a passive attacker\r\n```",
              "createdAt": "2020-09-15T13:26:18Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n- Integrity advantage (IA): The probability of a active attacker succeeding\r\n```",
              "createdAt": "2020-09-15T13:26:28Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 62,
              "body": "```suggestion\r\n- Authenticated Encryption advantage (AEA): The probability of a active\r\n```",
              "createdAt": "2020-09-15T13:27:34Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nor is able to forge a ciphertext that will be accepted as valid.\r\n```",
              "createdAt": "2020-09-15T13:27:55Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 91,
              "body": "+1 to this suggestion!",
              "createdAt": "2020-09-15T13:29:19Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            },
            {
              "originalPosition": 99,
              "body": "```suggestion\r\n- Integrity limit (IL): The number of ciphertexts an application can decrypt, \r\n  either successfully or not, before giving the adversary an integrity advantage \r\n  higher than IA.\r\n```",
              "createdAt": "2020-09-15T13:30:13Z",
              "updatedAt": "2020-09-16T09:22:31Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NDM4MTk5",
          "commit": {
            "abbreviatedOid": "b7ddd01"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-16T09:23:21Z",
          "updatedAt": "2020-09-16T09:23:22Z",
          "comments": [
            {
              "originalPosition": 79,
              "body": "Resolved in b7ddd01",
              "createdAt": "2020-09-16T09:23:22Z",
              "updatedAt": "2020-09-16T09:23:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NDM4NTEx",
          "commit": {
            "abbreviatedOid": "b7ddd01"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-16T09:23:44Z",
          "updatedAt": "2020-09-16T09:23:44Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "Resolved in b7ddd01",
              "createdAt": "2020-09-16T09:23:44Z",
              "updatedAt": "2020-09-16T09:23:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NDM4OTE5",
          "commit": {
            "abbreviatedOid": "b7ddd01"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-16T09:24:13Z",
          "updatedAt": "2020-09-16T09:24:13Z",
          "comments": [
            {
              "originalPosition": 99,
              "body": "Resolved in b7ddd01",
              "createdAt": "2020-09-16T09:24:13Z",
              "updatedAt": "2020-09-16T09:24:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0NDg2NDk1ODg3",
      "title": "AES-GCM mu bounds revision",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/26",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on ePrint 2018/993.",
      "createdAt": "2020-09-14T10:06:13Z",
      "updatedAt": "2020-09-16T13:38:39Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "533cb5ab97f200eba642054ff603c23f31363c6b",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "mu-bounds-revision",
      "headRefOid": "841459454f9b2cc8614614466aa47261eb393bc0",
      "closedAt": "2020-09-16T11:50:44Z",
      "mergedAt": "2020-09-16T11:50:44Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "77de32e3684dfb7f8d0b969fdc46df93757bd0d3"
      },
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "> I wonder how much of the commented stuff needs to be included in the draft. Appendix?\r\n\r\nGood question. For now I put them as comments mainly for our own future reference. But I guess we could display them in an appendix along with some more explanation if there's value to that.",
          "createdAt": "2020-09-16T09:44:43Z",
          "updatedAt": "2020-09-16T09:44:43Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjM2OTcy",
          "commit": {
            "abbreviatedOid": "3405b17"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I wonder how much of the commented stuff needs to be included in the draft.  Appendix?",
          "createdAt": "2020-09-15T00:12:29Z",
          "updatedAt": "2020-09-15T00:16:07Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "Do we allow the first term to reach 2^-48, because that means p being 2^-48 in the below results in AE being 2^-47.",
              "createdAt": "2020-09-15T00:12:30Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 186,
              "body": "Is this what we want to say, or do we want to instead say that the AE limit can be used to derive an integrity limit based on a chosen `p` and allocation of the limit between `q` and `v`?",
              "createdAt": "2020-09-15T00:15:43Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NDUzMDQw",
          "commit": {
            "abbreviatedOid": "5d3cc7b"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-16T09:41:38Z",
          "updatedAt": "2020-09-16T09:41:39Z",
          "comments": [
            {
              "originalPosition": 130,
              "body": "I wanted to express here that \"p is always >= 2^-48\", but Chris rightfully pointed out that deriving the limit based on both terms (.../2^127 _and_ 1/2^48) is much cleaner. Changed that in 5d3cc7b.",
              "createdAt": "2020-09-16T09:41:39Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NDUzNTI4",
          "commit": {
            "abbreviatedOid": "5d3cc7b"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-16T09:42:12Z",
          "updatedAt": "2020-09-16T09:42:12Z",
          "comments": [
            {
              "originalPosition": 186,
              "body": "Good point, I added a repetition of these explicit limits in 5d3cc7b.",
              "createdAt": "2020-09-16T09:42:12Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Njg1ODQw",
          "commit": {
            "abbreviatedOid": "3405b17"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-15T13:32:17Z",
          "updatedAt": "2020-09-16T11:48:10Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\n| B | Maximum number of blocks encrypted by any user or key (multi-user setting only) |\r\n```",
              "createdAt": "2020-09-15T13:32:17Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 186,
              "body": "Stefano expressed interest in giving us a mu integrity limit, though turnaround there is still TBD. So I think this text accurately reflects reality as of now.",
              "createdAt": "2020-09-15T13:37:21Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 167,
              "body": "```suggestion\r\nCA <= (q*l*B / 2^127) + (1 / 2^48)\r\n```",
              "createdAt": "2020-09-15T13:46:26Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nAE <= ((q+v)*l*B / 2^127) + (1 / 2^48)\r\n```",
              "createdAt": "2020-09-15T13:46:48Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 148,
              "body": "```suggestion\r\n    and applying simplifications as above (note there are no verification queries),\r\n```",
              "createdAt": "2020-09-15T13:47:14Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\n| u | Number of users or keys (multi-user setting only) |\r\n```",
              "createdAt": "2020-09-15T13:49:02Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            },
            {
              "originalPosition": 116,
              "body": "\ud83d\udc4d (by 2nd term I assume you mean \\sigma*B/2^127, as that checks out)",
              "createdAt": "2020-09-15T13:54:09Z",
              "updatedAt": "2020-09-16T11:50:24Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTQ0MDcy",
          "commit": {
            "abbreviatedOid": "8414594"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-09-16T11:50:36Z",
          "updatedAt": "2020-09-16T11:50:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0NDg3OTM1MDU4",
      "title": "Fix two nits.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/27",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-09-16T11:53:56Z",
      "updatedAt": "2021-03-17T13:06:35Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "77de32e3684dfb7f8d0b969fdc46df93757bd0d3",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/nits",
      "headRefOid": "0ef75b8318742d24ec72c832311c069bcb575076",
      "closedAt": "2020-09-16T13:57:02Z",
      "mergedAt": "2020-09-16T13:57:02Z",
      "mergedBy": "fxguenther",
      "mergeCommit": {
        "oid": "03d1a8fe5176d1a213975dc5a204380f41c54750"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjUyMTY4",
          "commit": {
            "abbreviatedOid": "0ef75b8"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "All good, thanks for catching those.",
          "createdAt": "2020-09-16T13:56:06Z",
          "updatedAt": "2020-09-16T13:56:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2MTE5NTE2",
      "title": "Apply editorial suggestions from Mattsson and others.",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/29",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Partially (or fully?) addresses #28. There are a couple things I didn't do because I didn't think they were needed. @martinthomson, if you're OK with closing out that issue, please do so. :-)",
      "createdAt": "2021-02-19T02:04:26Z",
      "updatedAt": "2021-03-17T13:06:44Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "master",
      "baseRefOid": "d4de6e0cdadfbabc89847b1668dde20e78136a22",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "caw/editorial-feedback",
      "headRefOid": "fe13aa7e2edc09172c731a0b60cd452220e8a988",
      "closedAt": "2021-02-19T13:55:46Z",
      "mergedAt": "2021-02-19T13:55:46Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "7c94c9ebbd230d056c425b253fb1d2ca36ef3039"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzODQzNDcz",
          "commit": {
            "abbreviatedOid": "97fcbaf"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I think that this will do, yes.",
          "createdAt": "2021-02-19T04:08:40Z",
          "updatedAt": "2021-02-19T04:14:46Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Is it optional or just maybe zero-length?  I know that this distinction is sometimes important, but it is here?",
              "createdAt": "2021-02-19T04:08:40Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 92,
              "body": "\"the probability of an attempted attack succeeding\" might be better",
              "createdAt": "2021-02-19T04:10:45Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 177,
              "body": "```suggestion\r\nMany of the formulae in this document depend on simplifying assumptions,\r\nfrom differing models, which means that results are not universally applicable. When using this\r\n```\r\n\r\nJust a grammar tic here.",
              "createdAt": "2021-02-19T04:11:27Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 187,
              "body": "Good point.  Maybe clarify with something like: \"In particular, in two-party communication, one participant cannot regard apparent overuse of a key by other participants as being in error, when it could be that the other participant has better information about bounds.\"",
              "createdAt": "2021-02-19T04:13:46Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 193,
              "body": "Good stuff.",
              "createdAt": "2021-02-19T04:14:11Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzOTA5ODUw",
          "commit": {
            "abbreviatedOid": "97fcbaf"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, looks good to me.",
          "createdAt": "2021-02-19T07:04:15Z",
          "updatedAt": "2021-02-19T07:26:55Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I agree zero-length might be more precise here.\r\n```suggestion\r\nas a function with four inputs -- secret key, nonce, plaintext, associated data\r\n(of which plaintext and associated data can optionally be zero-length) -- that\r\nproduces ciphertext output and an error code\r\n```\r\n",
              "createdAt": "2021-02-19T07:04:15Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 183,
              "body": "This is actually an interesting point: Yes, {{GCMProofs}} defines v as total number of decryption queries. However, forwarding encrypted ciphertexts to the decryption oracle or repeating queries to the decryption oracle is not allowed:\r\n\r\n\"Without loss of generality, we assume that A does not make trivial queries:\r\nif the encryption oracle returns (C, T ) for a query (N, A, M ), then A does not make a query\r\n(N, A, C, T ) to the decryption oracle, and A does not repeat a query to the decryption oracle.\" (p. 5)\r\n\r\nThat means that, in practice, any decryption query is a forgery _attempt_, so the difference actually is that we count _failed_ forgery attempts (which is the only thing you can do in practice) while they count _all_ forgery attempts (which you can only do in a model).  Of course, in practice, we care about bounding the any successful forgery.\r\n\r\nDoes the following capture this?\r\n\r\n```suggestion\r\nis not always the case. As an example of one such simplification, this document\r\ndefines v as the total number of failed decryption queries (that is, failed forgery\r\nattempts), whereas models usually count in v all forgery attempts.\r\n```",
              "createdAt": "2021-02-19T07:19:34Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            },
            {
              "originalPosition": 187,
              "body": "Agree that's an important point for (not) hard-coding limits. And I like the perspective that your communication partner might be cryptographically better informed ;-)",
              "createdAt": "2021-02-19T07:22:35Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjA0MjE3",
          "commit": {
            "abbreviatedOid": "27b522b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-19T13:49:50Z",
          "updatedAt": "2021-02-19T13:49:51Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "I kept this as-is to be consistent with the IA definition. (We can rework in a future issue/PR if needed.)",
              "createdAt": "2021-02-19T13:49:51Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjA0NjQ3",
          "commit": {
            "abbreviatedOid": "27b522b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-19T13:50:21Z",
          "updatedAt": "2021-02-19T13:50:22Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "Yeah, great suggestion!",
              "createdAt": "2021-02-19T13:50:21Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0MjA0ODE1",
          "commit": {
            "abbreviatedOid": "27b522b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-19T13:50:34Z",
          "updatedAt": "2021-02-19T13:50:35Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "\ud83d\udc4d ",
              "createdAt": "2021-02-19T13:50:35Z",
              "updatedAt": "2021-02-19T13:51:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0NTkwOTAyNzAw",
      "title": "Document perfect PRF/PRP assumption",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/32",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This came up in discussions at SAAG and I thought it worth capturing.\r\n\r\nCloses #30.",
      "createdAt": "2021-03-11T14:22:53Z",
      "updatedAt": "2021-03-18T12:39:32Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "7c94c9ebbd230d056c425b253fb1d2ca36ef3039",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "perfect-primitives",
      "headRefOid": "12ddcc6b558c6827a0cc6e68e138bbeb93a3697d",
      "closedAt": "2021-03-18T12:39:32Z",
      "mergedAt": "2021-03-18T12:39:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "30a25e43ed9a363d4f774572a975b50f43f76f02"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE0MjYxMTMx",
          "commit": {
            "abbreviatedOid": "511e8ee"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "cc @fxguenther for a quick look, too!",
          "createdAt": "2021-03-17T12:46:37Z",
          "updatedAt": "2021-03-17T12:46:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\npseudorandom function (PRF) or pseudorandom permutation (PRP) the AEAD builds\r\nupon is indistinguishable from a truly random function.  Thus, the advantage\r\n```",
              "createdAt": "2021-03-17T12:46:37Z",
              "updatedAt": "2021-03-17T23:23:25Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE1MDU3NDA5",
          "commit": {
            "abbreviatedOid": "12ddcc6"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks good to me, thanks!",
          "createdAt": "2021-03-18T07:42:34Z",
          "updatedAt": "2021-03-18T07:42:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0NjcyMDQyNDg4",
      "title": "No nonce randomization",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/33",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I did some analysis of Theorem 3.1 in the GCM MU paper.\r\n\r\nThe difference is small.  Theorem 3.1 adds `\u03c3/2^128` to the advantage.\r\nTheorem 4.3 adds `1/2^48` to the advantage.\r\n\r\nThe difference is felt when `\u03c3` gets large, then nonce randomization\r\ngets better.  It's not as small a value as I had expected (2^80 is a\r\nLARGE number) based on the original Bellare/Tackmann work, but it's\r\nthere.\r\n\r\nI restored the constant factor from the second term to the equations.  \r\nI tried a few things, but forcing a minimum on B seemed like it would be safest.\r\n\r\nThis is for yaronf/I-D#203.",
      "createdAt": "2021-06-17T00:38:40Z",
      "updatedAt": "2021-07-12T21:56:01Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "30a25e43ed9a363d4f774572a975b50f43f76f02",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "no-nonce-randomization",
      "headRefOid": "017a1e9fce69577bbcc3ba29d0daaad592115c08",
      "closedAt": "2021-07-12T21:55:57Z",
      "mergedAt": "2021-07-12T21:55:57Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "70ba31dcb2f6c23306eb78e66ba84197a6a63616"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA0MjEzNTg0",
          "commit": {
            "abbreviatedOid": "d8a3dc7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for doing the diff and work of writing this up!",
          "createdAt": "2021-07-12T14:55:33Z",
          "updatedAt": "2021-07-12T15:18:27Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nProtocols without nonce randomization have limits that are essentially the\r\n```",
              "createdAt": "2021-07-12T14:55:33Z",
              "updatedAt": "2021-07-12T15:18:27Z"
            },
            {
              "originalPosition": 80,
              "body": "```suggestion\r\nsignificantly more than 1600 bytes of data.  Otherwise, B should be increased by 161 for\r\n```",
              "createdAt": "2021-07-12T15:00:26Z",
              "updatedAt": "2021-07-12T15:18:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg3NTgwMDA2",
      "title": "Provide example numbers",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/36",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This shows the sort of analysis that might be done based on the\r\nsingle-key analysis we have for each AEAD.\r\n\r\nCloses #34.",
      "createdAt": "2021-07-12T07:22:13Z",
      "updatedAt": "2021-07-12T14:50:52Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "30a25e43ed9a363d4f774572a975b50f43f76f02",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "example-table",
      "headRefOid": "9e4c2c1daedcd87c76a7dd86d5a45e0359dded58",
      "closedAt": "2021-07-12T14:50:52Z",
      "mergedAt": "2021-07-12T14:50:52Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "8ded95506ba40938eefe9110031ed6905e29e272"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "\ud83d\udc4d \ud83d\ude4f ",
          "createdAt": "2021-07-12T14:50:49Z",
          "updatedAt": "2021-07-12T14:50:49Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA0MjA3ODc0",
          "commit": {
            "abbreviatedOid": "9e4c2c1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-07-12T14:50:40Z",
          "updatedAt": "2021-07-12T14:50:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg4MjA1NzY3",
      "title": "Advice on applying limits",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/38",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I reviewed the formulae and I believe that we are safe in recommending\r\nl=1 for byte counting.  It's definitely inefficient, but the\r\ninefficiency doesn't translate into a security issue as we have always\r\nassumed that l is variable.\r\n\r\nCloses #35.",
      "createdAt": "2021-07-12T21:55:17Z",
      "updatedAt": "2021-07-12T21:58:00Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "8ded95506ba40938eefe9110031ed6905e29e272",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "byte-counting",
      "headRefOid": "04dca0bcd4631d971056ac4b45605c5fcf6b34ea",
      "closedAt": "2021-07-12T21:58:00Z",
      "mergedAt": "2021-07-12T21:58:00Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1e06491accb0cc159ef622701c4ddca9d49f518f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA0NTc3NzYw",
          "commit": {
            "abbreviatedOid": "d6263f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-12T21:57:45Z",
          "updatedAt": "2021-07-12T21:57:45Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\noften as a result.\r\n```",
              "createdAt": "2021-07-12T21:57:45Z",
              "updatedAt": "2021-07-12T21:57:45Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA0NTc3ODEz",
          "commit": {
            "abbreviatedOid": "d6263f7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-07-12T21:57:50Z",
          "updatedAt": "2021-07-12T21:57:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 39,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkxMjIxMjU1",
      "title": "Editorial pass",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/39",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We didn't really say anything about rekeying, which is the most obvious\r\nway of managing limits.\r\n\r\nThis was raised (indirectly) by @emanjon (via #37) and also @smyshsv in #10.\r\n\r\nI considered doing more for #10 here, but I think that it is probably\r\nbest to leave the RFC 8645 AEAD definitions (those with internal\r\nrekeying) out of this.  We've very deliberately concentrated on modes\r\nthat have widespread deployment and -- cool as they are -- I am not\r\naware of any implementation of internal rekeying modes.  (FWIW, it looks\r\nlike the analysis there is entirely consistent with the multi-key\r\nsetting results we have.)\r\n\r\nCloses #10.",
      "createdAt": "2021-07-16T06:05:59Z",
      "updatedAt": "2021-07-19T21:46:58Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "9e4180f74585dad378af32627fa1e95f92735941",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "editorial-plus",
      "headRefOid": "318def13d35b23cf092d00c81995ec652c45f70d",
      "closedAt": "2021-07-19T21:46:58Z",
      "mergedAt": "2021-07-19T21:46:57Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "076a00fc350c5a698960cc1c21d8cb9010f632ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEwMDA2NDA5",
          "commit": {
            "abbreviatedOid": "318def1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-07-19T21:46:44Z",
          "updatedAt": "2021-07-19T21:46:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 40,
      "id": "MDExOlB1bGxSZXF1ZXN0Njk1ODEyMTAz",
      "title": "Partially implicit nonces",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/40",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "TLS 1.2 uses random, partially implicit nonces. The applicable multi-user analysis for this is in the GCM MU paper, Theorem 5.3.\r\n\r\nThe major difference to the TLS 1.3 / nonce randomization setting is that\r\n\r\n1. the nonce collision term `2^-48` is replaced by a negligible term (`2^-7t = 2^-224`)\r\n2. the `d` term becomes much larger, yielding a quadratic component (`(q+v)*o` resp. `(q+v)^2`) over `2^k`\r\n\r\n(This revises #33.)",
      "createdAt": "2021-07-23T09:47:07Z",
      "updatedAt": "2021-09-07T13:12:23Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "076a00fc350c5a698960cc1c21d8cb9010f632ab",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "partially-implicit-nonces",
      "headRefOid": "45d5aa4227251633ecd7d32bdc361566ebba85e7",
      "closedAt": "2021-08-23T02:03:09Z",
      "mergedAt": "2021-08-23T02:03:09Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "b578d298fc34f4b9815379b485feb6b518a74a82"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry for not getting to this in time, @fxguenther!",
          "createdAt": "2021-09-07T13:12:23Z",
          "updatedAt": "2021-09-07T13:12:23Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNjA1ODQz",
          "commit": {
            "abbreviatedOid": "b4cca2f"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I used a totally wrong theorem in my first pass at this.  Thanks for correcting that.",
          "createdAt": "2021-07-23T10:41:27Z",
          "updatedAt": "2021-08-11T00:13:02Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "I think you want p/2 here.\r\n\r\n```suggestion\r\n      p/2 >= (((q+v)*o + (q+v)^2) / 2^(k+26))\r\n```",
              "createdAt": "2021-07-23T10:41:27Z",
              "updatedAt": "2021-08-11T00:13:02Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\n    We can simplify the Theorem 5.3 advantage bound as follows:\r\n```",
              "createdAt": "2021-07-23T10:41:37Z",
              "updatedAt": "2021-08-11T00:13:03Z"
            },
            {
              "originalPosition": 137,
              "body": "```suggestion\r\n    subtracting terms for Pr[Bad_7] and Pr[Bad_8],\r\n```",
              "createdAt": "2021-07-23T10:48:21Z",
              "updatedAt": "2021-08-11T00:13:03Z"
            },
            {
              "originalPosition": 87,
              "body": "Should we also state that we assume that the attacker does no more work than every legitimate protocol user?",
              "createdAt": "2021-07-23T10:49:30Z",
              "updatedAt": "2021-08-11T00:13:03Z"
            },
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n      p/2 >= ((q+v)*l*B / 2^127)\r\n```",
              "createdAt": "2021-07-23T10:53:49Z",
              "updatedAt": "2021-08-11T00:13:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM0ODU1MDE0",
          "commit": {
            "abbreviatedOid": "9cbbc71"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-20T09:38:39Z",
          "updatedAt": "2021-08-20T09:38:39Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "```suggestion\r\nFor k = 128, assuming o <= q+v (i.e., that the attacker does not spend more work than all legitimate protocol users together), the limits are:\r\n```",
              "createdAt": "2021-08-20T09:38:39Z",
              "updatedAt": "2021-08-20T09:38:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM0ODU1NDEx",
          "commit": {
            "abbreviatedOid": "9cbbc71"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-08-20T09:39:09Z",
          "updatedAt": "2021-08-20T09:39:09Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "The \"assuming o <= q+v\" could be explained a bit more below, yes. Made a suggestion.",
              "createdAt": "2021-08-20T09:39:09Z",
              "updatedAt": "2021-08-20T09:39:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 42,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI4MjI2MTU3",
      "title": "Nonce length is fixed",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/42",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "As Joe notes, we assume a fixed length.  The definitions in the IETF all\r\nuse N_MIN = N_MAX = 12, but the NIST publications often veer into all\r\nsorts of wild fantasies of arbitrary nonce length.  This rarely works\r\nwell, as we see from the analysis in 2018/993.\r\n\r\nCloses #41.",
      "createdAt": "2021-09-07T00:12:28Z",
      "updatedAt": "2021-09-07T13:23:42Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "747cee2ca355ae47444883f069100bb5f57d31fb",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "nonce-length",
      "headRefOid": "ad03c9da59acdf967ee19a15b6af31df2957617e",
      "closedAt": "2021-09-07T13:23:42Z",
      "mergedAt": "2021-09-07T13:23:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f5c830c920e2de70fe50392cbd56ba268324c317"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3NTk4ODc1",
          "commit": {
            "abbreviatedOid": "1b0cf16"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-07T06:45:16Z",
          "updatedAt": "2021-09-07T06:45:17Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nanalyses in this document all fix the nonce length to r = 96.  Using other nonce\r\n```",
              "createdAt": "2021-09-07T06:45:16Z",
              "updatedAt": "2021-09-07T06:45:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3OTYxMzMx",
          "commit": {
            "abbreviatedOid": "1b0cf16"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-07T13:15:22Z",
          "updatedAt": "2021-09-07T13:15:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 43,
      "id": "MDExOlB1bGxSZXF1ZXN0NzMwODA4NDc4",
      "title": "update ref (I-D.ietf-quic-tls -> RFC9001)",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/43",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-09T17:54:06Z",
      "updatedAt": "2021-09-09T18:05:53Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "f5c830c920e2de70fe50392cbd56ba268324c317",
      "headRepository": "thomas-fossati/draft-irtf-cfrg-aead-limits",
      "headRefName": "patch-1",
      "headRefOid": "bca7690be63a1ba6a3a8dddbb5392851c0a5c3e5",
      "closedAt": "2021-09-09T18:05:53Z",
      "mergedAt": "2021-09-09T18:05:53Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9be3f531967e7e5d8641edec757b342a92c6f59f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUwNjY5Mjkw",
          "commit": {
            "abbreviatedOid": "bca7690"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-09T18:05:03Z",
          "updatedAt": "2021-09-09T18:05:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 44,
      "id": "MDExOlB1bGxSZXF1ZXN0NzMyNTEwOTAy",
      "title": "fix AEAD ref",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/44",
      "state": "MERGED",
      "author": "thomas-fossati",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "also fix broken link in AEComposition",
      "createdAt": "2021-09-13T08:33:06Z",
      "updatedAt": "2021-09-13T22:37:49Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "9be3f531967e7e5d8641edec757b342a92c6f59f",
      "headRepository": "thomas-fossati/draft-irtf-cfrg-aead-limits",
      "headRefName": "patch-2",
      "headRefOid": "abe93e42ed50fac213784df25a50fca21b6dc2d9",
      "closedAt": "2021-09-13T14:22:47Z",
      "mergedAt": "2021-09-13T14:22:47Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f6b96ff56614f697d2a377e05dc200997f69d5ea"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUyODE5NjM4",
          "commit": {
            "abbreviatedOid": "abe93e4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Eagle eye :-) Thanks!",
          "createdAt": "2021-09-13T14:22:42Z",
          "updatedAt": "2021-09-13T14:22:42Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzUzMzE1NjYx",
          "commit": {
            "abbreviatedOid": "abe93e4"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks!",
          "createdAt": "2021-09-13T22:37:49Z",
          "updatedAt": "2021-09-13T22:37:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 46,
      "id": "PR_kwDOD64iO84xZD7V",
      "title": "ChaCha20Poly1305 multi-key bounds",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/46",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added multi-key bounds from https://doi.org/10.1145/3460120.3484814  (CCS 2021).\r\n\r\n- ChaCha20Poly1305 has multi-key AE and integrity limit identical to single-user case (just that `v` is counted across all keys), multi-key confdentiality limit is bounded at very low levels\r\n- multi-key GCM bound improved: the above work shows that the constant additive 2^-48 term can be waived without further side-effects on the dominant terms\r\n- added multi-key examples (table)",
      "createdAt": "2022-01-21T15:44:51Z",
      "updatedAt": "2022-03-07T21:53:58Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "f6b96ff56614f697d2a377e05dc200997f69d5ea",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "chachapoly",
      "headRefOid": "63e28d8bb4ccdf383b5161c108db74c72acb3e4c",
      "closedAt": "2022-03-07T21:53:58Z",
      "mergedAt": "2022-03-07T21:53:58Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5d61d7e397a299629e17368c2534c9c03634c5de"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Merging as-is. We can address simplifications in followup work.",
          "createdAt": "2022-03-07T21:53:54Z",
          "updatedAt": "2022-03-07T21:53:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO84zSJh8",
          "commit": {
            "abbreviatedOid": "9ce640d"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for doing this Felix.  It's great to see a rigorous analysis of ChaCha20-Poly1305 from this perspective.  It confirms the intuition about the effect larger key and block sizes.  The balls into bins result for GCM is particularly encouraging too (even if I don't understand it...).",
          "createdAt": "2022-01-24T00:24:00Z",
          "updatedAt": "2022-01-24T01:15:49Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "This is a really useful result.  I have to admit that I found the explanation of the balls into bins result somewhat baffling - what is the relationship of `\\tilde{m}` to the other values? - but that is probably just because I'm not trying hard enough.  The conclusions are clear enough and this is a very useful outcome.",
              "createdAt": "2022-01-24T00:24:00Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 268,
              "body": "```suggestion\r\n        - 6th term:  1/2^(2t-2) = 2^-254\r\n```",
              "createdAt": "2022-01-24T00:35:09Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 242,
              "body": "Funny.  I struggled with the paper, formal definitions being great at obfuscation, but this explanation of d helped me get a better idea of what \\delta is supposed to capture.  I still don't completely understand why you believe that choosing 2 is acceptable relative to 1/2 (why not more or less?).\r\n\r\nThis one tells me that a larger delta is more conservative.  But the 8th term says that a larger delta gives a smaller advantage.  Which is it?",
              "createdAt": "2022-01-24T00:46:01Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 246,
              "body": "```suggestion\r\n        - B <= o <= 2^261 as required for Theorem 7.8\r\n```",
              "createdAt": "2022-01-24T00:49:05Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 357,
              "body": "Given that B <= o (probably by a significant margin) and p < sqrt(p), maybe this can just be:\r\n\r\n```suggestion\r\nq <= min( p * 2^246 - o, 2^100 )\r\n```",
              "createdAt": "2022-01-24T00:54:19Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 424,
              "body": "Maybe instead\r\n\r\n```suggestion\r\nmaximum number B of 128-bit blocks encrypted by any single key. For example,\r\nlimiting the number of messages to at most 2^20 (about a million) results in\r\nB = 2^27, which limits both q and v to 2^42 messages.\r\n```",
              "createdAt": "2022-01-24T01:02:51Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 417,
              "body": "```suggestion\r\nAEAD_AES_128_GCM, AEAD_AES_256_GCM and AEAD_CHACHA20_POLY1305 assume the use\r\nof nonce randomization, like in TLS 1.3 {{TLS}} and QUIC {{?RFC9001}}.\r\n```",
              "createdAt": "2022-01-24T01:03:03Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 439,
              "body": "I don't know what \"resp. permutation\" means here.  Can you expand?",
              "createdAt": "2022-01-24T01:05:30Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 299,
              "body": "```suggestion\r\n    subtracting terms for Pr[Bad_5] and Pr[Bad_6],\r\n```",
              "createdAt": "2022-01-24T01:07:10Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            },
            {
              "originalPosition": 311,
              "body": "See below.  I think that this can be safely omitted.",
              "createdAt": "2022-01-24T01:08:48Z",
              "updatedAt": "2022-01-24T01:15:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zXV9o",
          "commit": {
            "abbreviatedOid": "9ce640d"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-25T03:53:41Z",
          "updatedAt": "2022-01-25T03:53:42Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\n  ChaCha20Poly1305-MU: DOI.10.1145/3460120.3484814\r\n```\r\n\r\nThen we're pulling from the definitions elsewhere.  The result is the same, but we get the formatting consistent.",
              "createdAt": "2022-01-25T03:53:41Z",
              "updatedAt": "2022-01-25T03:53:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zbl3c",
          "commit": {
            "abbreviatedOid": "9ce640d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @fxguenther! Not everything checked out for me, so I'd appreciate clarity on some of the derivations. It's surely me who's missing something. =)",
          "createdAt": "2022-01-25T21:13:08Z",
          "updatedAt": "2022-01-25T22:47:09Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\n```\r\n\r\nHuzzah!",
              "createdAt": "2022-01-25T21:13:08Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 66,
              "body": "Hmm, what happened to the PRF advantage in 4.1? ",
              "createdAt": "2022-01-25T21:53:22Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 157,
              "body": "Yeah, much nicer. TL;DR: Add 2^(-delta*r) if you're doing nonce randomization. ",
              "createdAt": "2022-01-25T21:58:45Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 255,
              "body": "I wasn't able to derive the same constraint on `o+q` here based on the constraints in 7.8. Can we elaborate here?",
              "createdAt": "2022-01-25T22:12:38Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 246,
              "body": "Hrm, I think this should be 2^260 based on the constraints in 7.8.",
              "createdAt": "2022-01-25T22:29:25Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 265,
              "body": "This is true, but don't the constraints allow for a larger bound for B+q, e.g., `B+q < 2^261 + 2^128`? ",
              "createdAt": "2022-01-25T22:32:31Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            },
            {
              "originalPosition": 357,
              "body": "This is a good catch and seems to hold for most reasonable values of `p` -- I think we should take it.",
              "createdAt": "2022-01-25T22:44:20Z",
              "updatedAt": "2022-01-25T22:47:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zeIgw",
          "commit": {
            "abbreviatedOid": "52c860b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-26T13:26:16Z",
          "updatedAt": "2022-01-26T13:26:16Z",
          "comments": [
            {
              "originalPosition": 439,
              "body": "I assume it means \"respectively permutation,\" corresponding to the PRP earlier in the sentence.",
              "createdAt": "2022-01-26T13:26:16Z",
              "updatedAt": "2022-01-26T13:26:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zguu-",
          "commit": {
            "abbreviatedOid": "52c860b"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-26T23:19:02Z",
          "updatedAt": "2022-01-26T23:19:09Z",
          "comments": [
            {
              "originalPosition": 439,
              "body": "Perhaps the way to reframe this is to say:\r\n\r\n> For example, that a pseudorandom function (PRF) used by the AEAD is indistinguishable from a perfect random function or that a pseudorandom permutation (PRP) is indistinguishable from a perfect random permutation.\r\n\r\nOr something like that.",
              "createdAt": "2022-01-26T23:19:02Z",
              "updatedAt": "2022-01-26T23:19:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjasN",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:11:05Z",
          "updatedAt": "2022-01-27T14:11:05Z",
          "comments": [
            {
              "originalPosition": 439,
              "body": "Yes, that's what I meant; rephrased as suggested in d83b66a.",
              "createdAt": "2022-01-27T14:11:05Z",
              "updatedAt": "2022-01-27T14:12:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjbZ6",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:13:13Z",
          "updatedAt": "2022-01-27T14:13:13Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Instead of assuming the ChaCha block function to be a good PRF (resulting in a PRF advantage term), the multi-user analysis idealizes the permutation (hence that term vanishes).\r\n\r\nFrom this draft's perspective, there isn't too much of a difference, as we're anyway not considering the PRF advtange term. The only notable one is that the multi-user setting can capture the adversary's attacker offline work.",
              "createdAt": "2022-01-27T14:13:13Z",
              "updatedAt": "2022-01-27T14:13:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjdPV",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:18:44Z",
          "updatedAt": "2022-01-27T14:18:44Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "> Instead of assuming the ChaCha block function to be a good PRF (resulting in a PRF advantage term), the multi-user analysis idealizes the permutation (hence that term vanishes).\r\n\r\nGotcha \ud83d\udc4d  I must have missed that in the paper.",
              "createdAt": "2022-01-27T14:18:44Z",
              "updatedAt": "2022-01-27T14:18:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjeo9",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:22:49Z",
          "updatedAt": "2022-01-27T14:22:50Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "Not sure I'm following. For `o` (paper notation: `p`) and `B` (paper notation: `\u03c3_e`) we have the constraint\r\n\r\n`o, B <= (n-k [-1])/6 * 2^(n-k) = 42.5 * 2^256 <= 2^261`\r\n\r\n(Not that 2^260 vs. 2^261 make a difference here :smiley:)",
              "createdAt": "2022-01-27T14:22:49Z",
              "updatedAt": "2022-01-27T14:22:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjhun",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:30:45Z",
          "updatedAt": "2022-01-27T14:30:45Z",
          "comments": [
            {
              "originalPosition": 250,
              "body": "These constraints are merely derived from comparing the 1st and 2nd terms, without further constraints.\r\nHow about the following explanation?\r\n\r\n```suggestion\r\n          For d < 2^9 (as above) and o + q <= 2^145, this is dominated by the 1st term;\r\n          [[ 1st term <= 2nd term as long as v * (l + 1)/2^103 <= d(o + q)/2^256;\r\n          i.e., o + q <= v * (l + 1) * 2^153 / d.\r\n          Even for minimal values v = 1 and l = 1 in 1st term, with d < 2^9,\r\n          this holds as long as o + q <= 2^145. ]]\r\n```",
              "createdAt": "2022-01-27T14:30:45Z",
              "updatedAt": "2022-01-27T14:30:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjicK",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:32:45Z",
          "updatedAt": "2022-01-27T14:32:45Z",
          "comments": [
            {
              "originalPosition": 265,
              "body": "True, but then the 5th term starts dominating and we'd need to involve it in `AEA` and our limits.\r\nI felt like `B + q < 2^205` being a reasonable narrowed constraint that allows us to omit this 5th term.",
              "createdAt": "2022-01-27T14:32:45Z",
              "updatedAt": "2022-01-27T14:32:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjilv",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:33:09Z",
          "updatedAt": "2022-01-27T14:33:10Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "OK, so it's early here, but `42.5 * 2^256 <= 2^261` isn't true, right? `2^261 < 42.5 * 2^256 <= 2^262`. (I made a mistake in my derivation earlier, but either way, I agree it doesn't matter much)",
              "createdAt": "2022-01-27T14:33:09Z",
              "updatedAt": "2022-01-27T14:33:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjk-2",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:39:52Z",
          "updatedAt": "2022-01-27T14:39:52Z",
          "comments": [
            {
              "originalPosition": 357,
              "body": "Strictly speaking, `o` is the adversary's offline work while `B` is work done by normal users executing the protocol. So in principle, `B` could be larger than `o`.\r\n\r\nUltimately, the two first min-terms are most likely dominated by 2^100 except for very small `p` or very large `B` or `o`.",
              "createdAt": "2022-01-27T14:39:52Z",
              "updatedAt": "2022-01-27T14:39:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjmm1",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:44:19Z",
          "updatedAt": "2022-01-27T14:44:20Z",
          "comments": [
            {
              "originalPosition": 424,
              "body": "The 1500 bytes message size <= 2^7 blocks entered my calculation as B = 2^20 * 2^7, so I guess that should still be mentioned?\r\n\r\n```suggestion\r\nmaximum number B of 128-bit blocks encrypted by any single key. For example,\r\nlimiting the number of messages (of size <= 2^7 blocks) to at most 2^20 (about a\r\nmillion) per key results in B = 2^27, which limits both q and v to 2^42 messages.\r\n```",
              "createdAt": "2022-01-27T14:44:19Z",
              "updatedAt": "2022-01-27T14:44:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zjr2Q",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T14:58:39Z",
          "updatedAt": "2022-01-27T14:58:40Z",
          "comments": [
            {
              "originalPosition": 246,
              "body": "My bad, what I wanted to express is `o, B <= 42.5 * 2^256` is satisfied if `o, B <= 2^261`.",
              "createdAt": "2022-01-27T14:58:39Z",
              "updatedAt": "2022-01-27T14:58:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zlZDv",
          "commit": {
            "abbreviatedOid": "d83b66a"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-27T21:19:26Z",
          "updatedAt": "2022-01-27T21:19:26Z",
          "comments": [
            {
              "originalPosition": 357,
              "body": "`B` is the work of a single user, no?  I assume then that `o` exceeds that as any adversary should be willing to work harder than any single user might.\r\n\r\nI agree that the 2^100 is likely dominant here.  `p` has to get pretty small before the work involved gets plausible.",
              "createdAt": "2022-01-27T21:19:26Z",
              "updatedAt": "2022-01-27T21:19:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zzhuS",
          "commit": {
            "abbreviatedOid": "bbb9bbe"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T13:42:52Z",
          "updatedAt": "2022-02-01T13:42:53Z",
          "comments": [
            {
              "originalPosition": 357,
              "body": "Yes, `B` is encryptions/work under a single key/by a single user. So I agree that it's okay to assume that `B <= o` even if formally in the models you could have something else.  Unless maybe you're not rekeying?",
              "createdAt": "2022-02-01T13:42:52Z",
              "updatedAt": "2022-02-01T13:42:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84zz92-",
          "commit": {
            "abbreviatedOid": "63e28d8"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-01T15:04:11Z",
          "updatedAt": "2022-02-01T15:04:11Z",
          "comments": [
            {
              "originalPosition": 242,
              "body": "The paper's complexity indeed isn't helping with extracting the simplified bounds we want to present here *sigh\r\n\r\n\\delta is a formal tuning parameter in the underlying stochastic \"balls-into-bins\" lemma, which plays a role when determining d: the number of times a nonce is repeated across users. This balls-into-bins can be used to determine d because of how nonces are formed with randomization.\r\nNow: the larger \\delta, the smaller the 8th term [correct], but also the larger d.\r\n\r\nIn the paper's discussion, we chose \\delta = 2 simply as this makes the 8th term \"small enough\" to not dominate. 1/2 would be mimicking the GGM analysis, and lead to the 8th term being 2^-48 (\"problematically large\"). Other values might be reasonable, too; based on what Chris said, we should discuss this.",
              "createdAt": "2022-02-01T15:04:11Z",
              "updatedAt": "2022-02-01T15:04:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84z48ZM",
          "commit": {
            "abbreviatedOid": "63e28d8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T13:49:40Z",
          "updatedAt": "2022-02-02T13:49:40Z",
          "comments": [
            {
              "originalPosition": 265,
              "body": "I'm OK with that outcome.",
              "createdAt": "2022-02-02T13:49:40Z",
              "updatedAt": "2022-02-02T13:49:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84z48gL",
          "commit": {
            "abbreviatedOid": "63e28d8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM pending resolution of @martinthomson's comments.",
          "createdAt": "2022-02-02T13:50:00Z",
          "updatedAt": "2022-02-02T13:50:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOD64iO84z5Sg2",
          "commit": {
            "abbreviatedOid": "63e28d8"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-02T14:52:22Z",
          "updatedAt": "2022-02-02T14:52:23Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "Very roughly, `\\tilde{m}` is the parameter determining the overall balls-into-bins probability: it is what controls the term `2^-\\tilde{m}` added for nonce randomization, where in the proof of the latter we set `\\tilde{m} = \\delta * r`, where \\delta in turn controls the number of repeating nonces d and the number of allowed queries q.\r\n\r\nSo indeed the term `2^(-\\delta * r)` is what emerges from all this.\r\n\r\nBut when it comes to the clear and obvious explanation of this result, don't blame the reader... :wink: ",
              "createdAt": "2022-02-02T14:52:23Z",
              "updatedAt": "2022-02-02T14:52:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDOD64iO84x88FN",
      "title": "Editorial",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/47",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor edits/typos.\r\n\r\nA technically notable one: rekeying might not (only) give post-compromise security, but could only give forward security (TLS), or only post-compromise (example?), or both.",
      "createdAt": "2022-02-02T08:29:28Z",
      "updatedAt": "2022-02-02T23:16:20Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "f6b96ff56614f697d2a377e05dc200997f69d5ea",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "editorial",
      "headRefOid": "952b625de1f24bd0729b8e0a6fd3eff714db0eb4",
      "closedAt": "2022-02-02T23:16:20Z",
      "mergedAt": "2022-02-02T23:16:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2cc832da34da7d47086f6d2caef0c54496bdbb0f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO84z46Ub",
          "commit": {
            "abbreviatedOid": "db4ee84"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-02T13:42:54Z",
          "updatedAt": "2022-02-02T13:44:39Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\ndegrading security.  Rekeying can also provide a measure of forward and\r\n```",
              "createdAt": "2022-02-02T13:42:54Z",
              "updatedAt": "2022-02-02T13:44:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO84z7au9",
          "commit": {
            "abbreviatedOid": "952b625"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-02T23:15:27Z",
          "updatedAt": "2022-02-02T23:15:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 48,
      "id": "PR_kwDOD64iO840ErRY",
      "title": "Simplify CA for ChaCha",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/48",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The extra term really isn't relevant here unless you have enormous messages.  By which I mean, messages that are 32 Yottabytes in size.  That's a single encryption of that size.  2^100 of those messages, with every one of them that big.  No rekeying either.\r\n\r\nIt's even less plausible for smaller q.  A q of 1 results in a message size of 2^139 bytes.\r\n\r\nNeither is concretely possible as RFC 7539 has just a 32-bit counter, which limits messages to 256GB.",
      "createdAt": "2022-03-07T22:55:22Z",
      "updatedAt": "2022-03-09T22:14:23Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "5d61d7e397a299629e17368c2534c9c03634c5de",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "simplify",
      "headRefOid": "7c4c2b034cb7fc752b8855548190b8f21abe66c7",
      "closedAt": "2022-03-09T22:14:23Z",
      "mergedAt": "2022-03-09T22:14:23Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "7179adc4e985ba2d0833cfbed839428235267367"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO841ySnI",
          "commit": {
            "abbreviatedOid": "7c4c2b0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T23:25:06Z",
          "updatedAt": "2022-03-07T23:25:10Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Good catch!",
              "createdAt": "2022-03-07T23:25:06Z",
              "updatedAt": "2022-03-07T23:25:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO8415KW9",
          "commit": {
            "abbreviatedOid": "7c4c2b0"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-09T10:44:43Z",
          "updatedAt": "2022-03-09T10:44:44Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "```suggestion\r\nthe adversary's offline work `o` and the number of protected messages `q`\r\n```",
              "createdAt": "2022-03-09T10:44:43Z",
              "updatedAt": "2022-03-09T10:44:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO8415K-M",
          "commit": {
            "abbreviatedOid": "7c4c2b0"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-09T10:46:55Z",
          "updatedAt": "2022-03-09T10:46:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 49,
      "id": "PR_kwDOD64iO846A05C",
      "title": "Collisions in random explicit nonces",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/49",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We were already more or less saying this, but let's be really, really\r\nexplicit that this is not considered and not recommended.\r\n\r\nWording is not something I'm happy with exactly, so feel free to suggest alternatives.",
      "createdAt": "2022-06-21T09:00:58Z",
      "updatedAt": "2022-06-22T01:02:27Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "26a7f1ad4530086698a71b13f4431e242a55cd44",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "only-counters",
      "headRefOid": "571ed99c573c2cc0e57ee076f5b849ed4979be8e",
      "closedAt": "2022-06-22T01:01:35Z",
      "mergedAt": "2022-06-22T01:01:35Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "61a3a7e3198a15c62b5c0dcf3c21019d44c1a39d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO848aTqW",
          "commit": {
            "abbreviatedOid": "7097479"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM pending one suggestion.",
          "createdAt": "2022-06-21T12:40:14Z",
          "updatedAt": "2022-06-21T12:40:47Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nhave a higher chance of nonce collisions and are not considered for the\r\nlimits in this section.\r\n```",
              "createdAt": "2022-06-21T12:40:14Z",
              "updatedAt": "2022-06-21T12:40:48Z"
            },
            {
              "originalPosition": 16,
              "body": "I would omit the 'not recommended' part, as that's probably something left to TLS 1.2 and its related documents.",
              "createdAt": "2022-06-21T12:40:38Z",
              "updatedAt": "2022-06-21T12:40:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO848aXAa",
          "commit": {
            "abbreviatedOid": "7097479"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, thanks!",
          "createdAt": "2022-06-21T12:49:45Z",
          "updatedAt": "2022-06-21T12:49:45Z",
          "comments": []
        }
      ]
    },
    {
      "number": 50,
      "id": "PR_kwDOD64iO847KddR",
      "title": "Use superscripts for multi-key example",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/50",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These are more readable in HTML this way.",
      "createdAt": "2022-07-11T02:49:20Z",
      "updatedAt": "2022-07-11T12:17:14Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "61a3a7e3198a15c62b5c0dcf3c21019d44c1a39d",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "example-sup",
      "headRefOid": "c4fffffdba87c16e5eb191fcff32547f89acd1ee",
      "closedAt": "2022-07-11T12:17:14Z",
      "mergedAt": "2022-07-11T12:17:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ecc8e173f76e96d9367dae473a28d2414e6dc22b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO849pUSR",
          "commit": {
            "abbreviatedOid": "c4fffff"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-11T12:17:09Z",
          "updatedAt": "2022-07-11T12:17:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 51,
      "id": "PR_kwDOD64iO848jW3m",
      "title": "Update metadata",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/51",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The stream was wrong (it defaults to IETF).  Then update the other stuff.\r\n\r\nI added some keywords to head off the inevitable questions from the RPC.  Happy to take suggestions for others, the more outlandish, the better.",
      "createdAt": "2022-08-03T06:42:26Z",
      "updatedAt": "2022-08-04T02:45:57Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "ecc8e173f76e96d9367dae473a28d2414e6dc22b",
      "headRepository": "martinthomson/draft-wood-cfrg-aead-limits",
      "headRefName": "metadata",
      "headRefOid": "16d39e1bb0611d5a8218460651d5c7d444259b6d",
      "closedAt": "2022-08-03T23:20:48Z",
      "mergedAt": "2022-08-03T23:20:48Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "d6b48c3fd8f78c4e931462f9332976df27171d27"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO84_ObrK",
          "commit": {
            "abbreviatedOid": "0e64705"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-03T17:25:10Z",
          "updatedAt": "2022-08-03T17:25:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOD64iO84_Obwv",
          "commit": {
            "abbreviatedOid": "0e64705"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-03T17:25:26Z",
          "updatedAt": "2022-08-03T17:25:27Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n  - limits\r\n```",
              "createdAt": "2022-08-03T17:25:26Z",
              "updatedAt": "2022-08-03T17:25:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 52,
      "id": "PR_kwDOD64iO85J_-Fq",
      "title": "Convert all instances of l to L",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/52",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This was pretty hard to automate as you might imagine, but I agree with Scott about the l being easily confused (did I type 1 or l or I?  \u00af\\\\(\u00b0\\_o)/\u00af).\r\n\r\nI also tried to be more consistent in the application of backticks throughout.  There are a few changes that relate to that.  I've also tried to remove a few places where dropping a variable name into prose might be jarring.",
      "createdAt": "2023-02-15T04:31:37Z",
      "updatedAt": "2023-02-17T22:07:10Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "d6b48c3fd8f78c4e931462f9332976df27171d27",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "lL",
      "headRefOid": "9947d5759df868bd4f9161fe16498b31001ffcbe",
      "closedAt": "2023-02-17T22:07:10Z",
      "mergedAt": "2023-02-17T22:07:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1cb73ecb8267d7eb0ae33b4b8328352afe8b6224"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85Nrk3w",
          "commit": {
            "abbreviatedOid": "62132f2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM with one missing s/l/L change. I went through the raw file to see if I could catch any lingering `l` references and didn't see any. Thanks for applying the fine-tooth comb here.",
          "createdAt": "2023-02-17T11:46:37Z",
          "updatedAt": "2023-02-17T11:50:37Z",
          "comments": [
            {
              "originalPosition": 441,
              "body": "```suggestion\r\ncommon Internet MTU of around 1500 bytes, then a value for `L` might be set to\r\n```",
              "createdAt": "2023-02-17T11:46:37Z",
              "updatedAt": "2023-02-17T11:50:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85NvNoa",
          "commit": {
            "abbreviatedOid": "d3970a7"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks for this! Looks good, modulo another l found.",
          "createdAt": "2023-02-17T21:22:37Z",
          "updatedAt": "2023-02-17T21:22:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOD64iO85KABll",
      "title": "Add a section on assumptions and approximations",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/53",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We take a lot of liberties throughout, which are generally well signposted, but I thought it might be helpful to include something more general in the lead-in.  This also addresses the non-repeating nonce comment.",
      "createdAt": "2023-02-15T04:58:14Z",
      "updatedAt": "2023-02-17T22:02:10Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "d6b48c3fd8f78c4e931462f9332976df27171d27",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "assumptions",
      "headRefOid": "bd6a7a39777f500580e7de66ed2dec52c4269c34",
      "closedAt": "2023-02-17T22:02:10Z",
      "mergedAt": "2023-02-17T22:02:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "044636da1313f75c480ccf7863de826715499a04"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85Nrjzj",
          "commit": {
            "abbreviatedOid": "bd6a7a3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-17T11:44:33Z",
          "updatedAt": "2023-02-17T11:44:33Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOD64iO85NvQWT",
          "commit": {
            "abbreviatedOid": "bd6a7a3"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-17T21:35:53Z",
          "updatedAt": "2023-02-17T21:35:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 54,
      "id": "PR_kwDOD64iO85KADer",
      "title": "Update template stuff",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/54",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "All I wanted was a function `.gitignore`, but the automated process doesn't do much harm.",
      "createdAt": "2023-02-15T05:07:39Z",
      "updatedAt": "2023-02-15T12:53:34Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "d6b48c3fd8f78c4e931462f9332976df27171d27",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "gitignore",
      "headRefOid": "49580e8dd89ddb25d412e749102fa9bfd822bbd3",
      "closedAt": "2023-02-15T12:53:33Z",
      "mergedAt": "2023-02-15T12:53:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "168e5752a1b3f575d6704d871b1a8799fbbff71f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85Nc9Qj",
          "commit": {
            "abbreviatedOid": "49580e8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-15T12:53:25Z",
          "updatedAt": "2023-02-15T12:53:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOD64iO85KQI9f",
      "title": "ChaCha20Poly1305-MU on ePrint",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/56",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Replaced DOI link with ePrint archive version now online",
      "createdAt": "2023-02-17T21:43:38Z",
      "updatedAt": "2023-02-17T22:07:00Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "168e5752a1b3f575d6704d871b1a8799fbbff71f",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "ccpmu-public",
      "headRefOid": "21fc02607c6868e5558f033e3279758a33f2fccd",
      "closedAt": "2023-02-17T22:07:00Z",
      "mergedAt": "2023-02-17T22:07:00Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "baf1c72be3d1111449293248f9a995825b3940e2"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Any reason we wouldn't stick with the DOI of the published version? Is it because the ePrint is updated more regularly?",
          "createdAt": "2023-02-17T22:02:00Z",
          "updatedAt": "2023-02-17T22:02:00Z"
        },
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "> Any reason we wouldn't stick with the DOI of the published version? Is it because the ePrint is updated more regularly?\r\n\r\nThe ePrint version is the full version, and also updatable. Most importantly though, 10.1007/978-3-031-07085-3_30 is not open access.",
          "createdAt": "2023-02-17T22:06:11Z",
          "updatedAt": "2023-02-17T22:06:11Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Sold!",
          "createdAt": "2023-02-17T22:06:56Z",
          "updatedAt": "2023-02-17T22:06:56Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85NvWoJ",
          "commit": {
            "abbreviatedOid": "21fc026"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-02-17T22:06:50Z",
          "updatedAt": "2023-02-17T22:06:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 57,
      "id": "PR_kwDOD64iO85OUxCg",
      "title": "Explain GCM IA and CCM CA bounds",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/57",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Following up on Scott Fluhrer's CFRG review (Feb 14, 2023), I've added explanations for two bounds:\r\n\r\n1. **GCM integrity**: We're using an improved bound (as in {{AEBounds}}) from {{GCMProofs}, Equation (22), where the second term mentioned in #55 vanishes by applying a result from Bernstein on random permutations.\r\n2. **CCM confidentiality**: The `2L` here comes from the way message blocks are counted twice for the terms `l_E` (or `l_F`) in {{!CCM-ANALYSIS=DOI.10.1007/3-540-36492-7_7}}, not from counting `l_E + l_F` (that's integrity, and hence `2L * (q + v)` there).\r\n\r\nI.e., in both cases the bounds as stated are correct, but I thought that added explanation would be helpful.",
      "createdAt": "2023-04-14T12:56:28Z",
      "updatedAt": "2023-04-25T20:45:39Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "1cb73ecb8267d7eb0ae33b4b8328352afe8b6224",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "main",
      "headRefOid": "ffaa695eade3649a4c0a691ccd347af015cedd51",
      "closedAt": "2023-04-25T20:45:39Z",
      "mergedAt": "2023-04-25T20:45:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "154d3495290962d52c6f7d3c83f426f83fc252a7"
      },
      "comments": [
        {
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "body": "> I wonder how much of the exposition in comments here is really needed to understand the text.\r\n\r\nI opted for being rather more than less detailed, given that rederiving these bounds is always a bit painful and comments are mostly for our own reference.",
          "createdAt": "2023-04-24T07:02:37Z",
          "updatedAt": "2023-04-24T07:02:37Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, that makes sense.  I'll let @chris-wood comment, but I think that this is the last open item before we can proceed based on the review.",
          "createdAt": "2023-04-24T11:25:28Z",
          "updatedAt": "2023-04-24T11:25:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85TRtnL",
          "commit": {
            "abbreviatedOid": "926389b"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I wonder how much of the exposition in comments here is really needed to understand the text.",
          "createdAt": "2023-04-24T03:53:53Z",
          "updatedAt": "2023-04-24T04:05:28Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n    |m| (resp. |c|), and once in the encoding function \\beta.\r\n```",
              "createdAt": "2023-04-24T03:53:53Z",
              "updatedAt": "2023-04-24T04:05:28Z"
            },
            {
              "originalPosition": 10,
              "body": "Can we cite Equation 22 then?  That is:\r\n\r\n```suggestion\r\nApplying Equation (22) from {{GCMProofs}}, in which the assumption of\r\n`s + q + v < 2^64` ensures that the delta function cannot produce a value\r\ngreater than 2, the following bound applies:\r\n```\r\n\r\nThat would let us drop the comment entirely and explain the derivation more directly.\r\n",
              "createdAt": "2023-04-24T04:04:20Z",
              "updatedAt": "2023-04-24T04:05:28Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n```",
              "createdAt": "2023-04-24T04:05:21Z",
              "updatedAt": "2023-04-24T04:05:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85TSR1v",
          "commit": {
            "abbreviatedOid": "926389b"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-24T06:55:26Z",
          "updatedAt": "2023-04-24T06:55:27Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Agreed, cleaner this way.",
              "createdAt": "2023-04-24T06:55:27Z",
              "updatedAt": "2023-04-24T06:55:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85TfV26",
          "commit": {
            "abbreviatedOid": "ffaa695"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I think the current text is fine. We have the comments as a reference should we need to remind ourselves how the bounds were derived.",
          "createdAt": "2023-04-25T20:45:29Z",
          "updatedAt": "2023-04-25T20:45:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 58,
      "id": "PR_kwDOD64iO85SHIMg",
      "title": "Not misleading regarding ChaCha20 confidentiality",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/58",
      "state": "MERGED",
      "author": "emanjon",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-06-04T07:15:32Z",
      "updatedAt": "2023-06-08T07:04:46Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "154d3495290962d52c6f7d3c83f426f83fc252a7",
      "headRepository": "emanjon/draft-irtf-cfrg-aead-limits",
      "headRefName": "patch-1",
      "headRefOid": "4f9b8cd57d65dbcb9574da9dfd514ac454098207",
      "closedAt": "2023-06-08T07:04:46Z",
      "mergedAt": "2023-06-08T07:04:46Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "d8d4bf0fc3f951e152ffd1ecfc066ac01b95627f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85XHBZL",
          "commit": {
            "abbreviatedOid": "4760d70"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-05T00:16:37Z",
          "updatedAt": "2023-06-05T00:48:32Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Even with the assumption of an ideal PRF, an attacker should have advantage at least based on `q`.  Maybe we can just drop this line and instead say that the paper assumes that the confidentiality advantage over an ideal PRF is zero.  Of course, that is false because the PRF will repeat after a sufficient number of blocks, even if that is an implausibly large number.",
              "createdAt": "2023-06-05T00:16:37Z",
              "updatedAt": "2023-06-05T00:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85XfCql",
          "commit": {
            "abbreviatedOid": "b042928"
          },
          "author": "alext-w",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-07T13:58:30Z",
          "updatedAt": "2023-06-07T13:58:30Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Just chiming in as an observer of this fine discussion - a small typo slipped in.\r\n\r\n```suggestion\r\nThis implies there is no limit beyond the PRF security of the underlying ChaCha20\r\n```",
              "createdAt": "2023-06-07T13:58:30Z",
              "updatedAt": "2023-06-07T13:58:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85XiP22",
          "commit": {
            "abbreviatedOid": "4f9b8cd"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-07T21:12:38Z",
          "updatedAt": "2023-06-07T21:12:38Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "Should we say \"assumes\" instead of \"implies\"?  I know that this is a dirty word here, but:\r\n\r\n```suggestion\r\nThis analysis assumes that there is no limit beyond the PRF security of the underlying ChaCha20\r\n```",
              "createdAt": "2023-06-07T21:12:38Z",
              "updatedAt": "2023-06-07T21:12:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85XkQct",
          "commit": {
            "abbreviatedOid": "4f9b8cd"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-08T06:50:39Z",
          "updatedAt": "2023-06-08T06:50:39Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "No, the analysis indeed _implies_ that there is no limit beyond the _assumed_ PRF security of ChaCha20.  (The latter is in line with our statements e.g. under Security Considerations, that analyses assume primitives ideal, like PRF being truly random functions.)\r\n\r\nFine to add \"_assumed_ PRF security ...\" though, if that makes it clearer.",
              "createdAt": "2023-06-08T06:50:39Z",
              "updatedAt": "2023-06-08T06:50:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85XkWCm",
          "commit": {
            "abbreviatedOid": "4f9b8cd"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-08T07:04:38Z",
          "updatedAt": "2023-06-08T07:04:39Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "I see.  Thanks for expanding.  I'm OK with no change.",
              "createdAt": "2023-06-08T07:04:38Z",
              "updatedAt": "2023-06-08T07:04:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 59,
      "id": "PR_kwDOD64iO85Saodb",
      "title": "Number of forgery attempts",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/59",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Number of forgery attempts should include the \"ongoing one\" for which we provide a bound. I.e., if the attacker made `x` (failed) attempts already, then the bounds are for `v = x + 1` attempts / decryption queries overall.\r\n\r\nThis is in response to John Mattsson's comment:\r\n\r\n> In their paper \u201cBreaking and Repairing GCM Security Proofs\u201d, Iwata, Ohashi, and Minematsu define the variable q\u2032 to be decryption queries. The draft instead uses v to mean failed AEAD decryption invocations. The idea to replace \u201cdecryption queries\u201d with \u201cfailed AEAD decryption invocations\u201d is very good but causes some problems.\r\n> \r\n> IA <= 2 * (v * (L + 1)) / 2^128\r\n> v - Number of attacker forgery attempts (failed AEAD decryption invocations)            \r\n> \r\n> When using the formulas in the paper, it\u2019s clear that q\u2019 is 1 in the first forgery attempt.\r\n> When using the formulas in the draft it\u2019s not clear the v is 1 in the first forgery attempt.\r\n> \r\n> Wrongly using v = 0 gives the incorrect probability of 1 / 2^128 for a successful forgery which is much better than the correct value of 1 / 2^116.\r\n\r\nIndeed the probability for the first forgery attempt should be using v = 1, so it's \"0 past attempts + 1\".\r\n\r\nI'm not sure I follow the 2^116 bound, though.  (Also, with the current term and `v = 0`, IA would be 0.)",
      "createdAt": "2023-06-07T13:39:55Z",
      "updatedAt": "2023-06-07T21:10:41Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "154d3495290962d52c6f7d3c83f426f83fc252a7",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "fxguenther-counting-forgeries",
      "headRefOid": "0c0a143e3d087da7709778693142d6a25d3b0a26",
      "closedAt": "2023-06-07T21:10:41Z",
      "mergedAt": "2023-06-07T21:10:41Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "9237cf9ccce62694981c55786afbe27759fe4938"
      },
      "comments": [
        {
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "body": ">Indeed the probability for the first forgery attempt should be using v = 1, so it's \"0 past attempts + 1\".\r\nThe fix seems perfect.\r\n\r\n>I'm not sure I follow the 2^116 bound, though. (Also, with the current term and v = 0, IA would be 0.)\r\nIgnore these numbers.  1 / 2^128 is wrong. I think I thought of QUIC when I wrote 1 / 2^116 (I think L is 2^12 in QUIC) but it seems like I forgot the additional factor 2.",
          "createdAt": "2023-06-07T13:50:04Z",
          "updatedAt": "2023-06-07T13:50:04Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85Xe4Fs",
          "commit": {
            "abbreviatedOid": "0c0a143"
          },
          "author": "emanjon",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-07T13:42:18Z",
          "updatedAt": "2023-06-07T13:42:18Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOD64iO85XiPKy",
          "commit": {
            "abbreviatedOid": "0c0a143"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-06-07T21:10:26Z",
          "updatedAt": "2023-06-07T21:10:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 60,
      "id": "PR_kwDOD64iO85UMzWc",
      "title": "Review by Alexander Tereschenko",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/60",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I couldn't find fault in any of the suggestions, so I applied them.",
      "createdAt": "2023-06-29T02:55:48Z",
      "updatedAt": "2023-07-01T00:24:43Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "d8d4bf0fc3f951e152ffd1ecfc066ac01b95627f",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "aleksandr",
      "headRefOid": "07c93fd0bc241e2fd5aa0020e0ab9dd95ed9371d",
      "closedAt": "2023-07-01T00:24:40Z",
      "mergedAt": "2023-07-01T00:24:39Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "419cb40f55c19000e23cf7e5b247b2b31ad86bf2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85ZwOXy",
          "commit": {
            "abbreviatedOid": "381f569"
          },
          "author": "alext-w",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-29T18:06:13Z",
          "updatedAt": "2023-06-29T18:06:14Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "One more small typo fix I'd suggest (mentioned this in passing in the email):\r\n\r\n```suggestion\r\n- Integrity limit (IL): The number of ciphertexts an application can decrypt\r\n```",
              "createdAt": "2023-06-29T18:06:13Z",
              "updatedAt": "2023-06-29T18:14:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85Zwjjm",
          "commit": {
            "abbreviatedOid": "381f569"
          },
          "author": "alext-w",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-29T19:10:15Z",
          "updatedAt": "2023-06-29T19:10:16Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Looks like a surplus \"to\" here (or was this meant to be \"adding to\" instead?):\r\n\r\n```suggestion\r\nallocations tend to greatly reduce `q` without significantly increasing `v`.\r\n```",
              "createdAt": "2023-06-29T19:10:16Z",
              "updatedAt": "2023-06-29T19:10:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO85ZzQiH",
          "commit": {
            "abbreviatedOid": "8d4f2de"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for these good suggestions Alexander, and thanks for integrating them Martin.\r\nOnly had some minor editorial nits.",
          "createdAt": "2023-06-30T06:48:40Z",
          "updatedAt": "2023-06-30T06:51:30Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nNote that values of p that cause v to exceed 2^64 are where `p > L / 2^63`.\r\nThe same p value produces q = 2^33 * L^(-1/2) in the CA limit.\r\nL is at most 2^32 by construction (that's the block counter),\r\nso s + q <= q * (L+1) would be at most 2^49 which can be ignored\r\n(ignoring the +1 as also being insignificant).\r\n```\r\n\r\nMinor editorial nit.",
              "createdAt": "2023-06-30T06:48:40Z",
              "updatedAt": "2023-06-30T06:51:30Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\nThis approach produces much smaller values for `v` than for `q`.  Alternative\r\n```",
              "createdAt": "2023-06-30T06:49:08Z",
              "updatedAt": "2023-06-30T06:51:30Z"
            }
          ]
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOD64iO85UNCR6",
      "title": "Acknowledgments",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/62",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #61.",
      "createdAt": "2023-06-29T04:31:54Z",
      "updatedAt": "2023-07-01T00:42:55Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "d8d4bf0fc3f951e152ffd1ecfc066ac01b95627f",
      "headRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "headRefName": "acks",
      "headRefOid": "3fab622860d2a646247602a28c12fa48a903de36",
      "closedAt": "2023-07-01T00:25:09Z",
      "mergedAt": "2023-07-01T00:25:09Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "3f029b33011a356b2e0014b65d32da50240bc86d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85ZzU_4",
          "commit": {
            "abbreviatedOid": "d4c9a79"
          },
          "author": "fxguenther",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "These plus Yoav Nir is also who I could recollect from mailing list and git.",
          "createdAt": "2023-06-30T07:03:35Z",
          "updatedAt": "2023-06-30T07:06:20Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n{{{David McGrew}}},\r\n{{{Yoav Nir}}}, and\r\n```\r\n\r\nfrom https://mailarchive.ietf.org/arch/msg/cfrg/GC_MZiIxR9amDU0BG-21uJsUIRc/",
              "createdAt": "2023-06-30T07:03:35Z",
              "updatedAt": "2023-06-30T07:06:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOD64iO85dPmUz",
      "title": "Affiliation updated",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/63",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-19T09:06:31Z",
      "updatedAt": "2023-10-19T14:37:49Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "3f029b33011a356b2e0014b65d32da50240bc86d",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "fxguenther-affil",
      "headRefOid": "ae71978b7ee69892766fd3edab572f5a4e476666",
      "closedAt": "2023-10-19T14:37:49Z",
      "mergedAt": "2023-10-19T14:37:49Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "1b6bd0c8b6fa7e5afde07088bcbcf38a51330d30"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 64,
      "id": "PR_kwDOD64iO85oNdbh",
      "title": "addressing comments by John Mattsson (10 Nov 2023)",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/64",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addressing comments by John Mattsson [on CFRG mailing (10 Nov 2023)](https://mailarchive.ietf.org/arch/msg/cfrg/rF_r7lWvPaeenvsSyBpY5H3oljg/) as follows:\r\n\r\n- *major:* \"I am strongly against any suggestion that the single-key confidentiality and integrity advantages should be used to calculate rekeying limits [...]\"\r\n  - emphasized that multi-key limits should be used when rekeying, noted that offline work is about time not memory\r\n- *minor:* \"I think it would be good if bounds for OCB could be included.\"\r\n  - (no change)\r\n- *minor:* \"I think this needs to be expanded to explain that there might be a huge number of keys shared between two parties.\"\r\n  - added note on multiple sessions between parties and many keys within sessions in introduction\r\n- *minor:* \"Would be good if this also mentioned key compromise.\"\r\n  - (no change; the focus here is on data limits)\r\n- *minor:* \"I think this should mention time.\"\r\n  - mentioned time as usage limit indicator",
      "createdAt": "2024-02-28T19:21:49Z",
      "updatedAt": "2024-04-01T16:57:33Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "1b6bd0c8b6fa7e5afde07088bcbcf38a51330d30",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "mattsson-comments_2023-11-10",
      "headRefOid": "da82c41557423742090e0481fa8e65ef1dd945d9",
      "closedAt": "2024-04-01T16:57:33Z",
      "mergedAt": "2024-04-01T16:57:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9453203182c76806479baaa76f7bcc160d9edd1e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO85xt7oh",
          "commit": {
            "abbreviatedOid": "7d7ad79"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-02-29T03:33:47Z",
          "updatedAt": "2024-02-29T03:34:51Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nwork (measuring time, but not memory) to help break any key. As a result, AEAD\r\n```",
              "createdAt": "2024-02-29T03:33:47Z",
              "updatedAt": "2024-02-29T03:34:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 66,
      "id": "PR_kwDOD64iO85yPuFB",
      "title": "Fix AEBounds link",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/66",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "[AEBounds] is on ePrint now \u2013 fixes #65 ",
      "createdAt": "2024-06-12T14:28:10Z",
      "updatedAt": "2024-06-12T14:42:13Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "9453203182c76806479baaa76f7bcc160d9edd1e",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "main",
      "headRefOid": "1c388e22f478257f365f6ad335816c16a72cfa63",
      "closedAt": "2024-06-12T14:31:14Z",
      "mergedAt": "2024-06-12T14:31:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f6fd5dadde6fedee152d3115e65a8d51f8c0c2aa"
      },
      "comments": [
        {
          "author": "ctz",
          "authorAssociation": "NONE",
          "body": "Thank you!",
          "createdAt": "2024-06-12T14:42:11Z",
          "updatedAt": "2024-06-12T14:42:11Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO8599Ttr",
          "commit": {
            "abbreviatedOid": "1c388e2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-06-12T14:31:10Z",
          "updatedAt": "2024-06-12T14:31:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOD64iO853OkPS",
      "title": "TP review",
      "url": "https://github.com/cfrg/draft-irtf-cfrg-aead-limits/pull/68",
      "state": "MERGED",
      "author": "fxguenther",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I addressed Thomas' review #67 as follows:\r\n\r\n- page 3 (section 1) \u2013 nonces: clarified focus on non-zero-length nonces\r\n- page 5 (table 1) \u2013 block length: defined block length, mentioned each underlying block cipher\r\n- page 5 (section 3) \u2013 \"passive attacker\" and \"active attacker\": changed to IND-CPA/INT-CTXT\r\n- page 9 (section 5.1) \u2013 \"t = 128 [GCM]\": cited RFC 5116 for fixed t=128\r\n- page 9 (section 5.2): clarified ChaCha20 vs Poly1305 block length\r\n- page 10 (section 5.2.1) \u2013 \"CA <= 0\": Clarified advantages are modulo ideal primitives.\r\n- page 13 (section 6.1) \u2013 \".. for AEAD_AES_128_GCM and AEAD_AES_128_GCM respectively\": fixed\r\n- page 15 (section 6.2.2) \u2013 \"CA <= (o + q) / 2^247)\": fixed\r\n- page 17 (section 7) \u2013 security considerations on other party overusing a key:  I agree with Thomas that all we should say here is \"be prepared that these numbers might change\".\r\n- page 20 (acknowledgments): fixed",
      "createdAt": "2024-08-02T08:47:23Z",
      "updatedAt": "2024-08-05T00:19:08Z",
      "baseRepository": "cfrg/draft-irtf-cfrg-aead-limits",
      "baseRefName": "main",
      "baseRefOid": "f6fd5dadde6fedee152d3115e65a8d51f8c0c2aa",
      "headRepository": "fxguenther/draft-irtf-cfrg-aead-limits",
      "headRefName": "TP-review",
      "headRefOid": "5f1a270ed5925d84847d185675e161dd34d352e1",
      "closedAt": "2024-08-05T00:19:08Z",
      "mergedAt": "2024-08-05T00:19:08Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "eaa77308ceb6302926865e66b14d70f08b388575"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOD64iO86ECpTH",
          "commit": {
            "abbreviatedOid": "4f338dd"
          },
          "author": "martinthomson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is wonderful.  Thanks for doing this.",
          "createdAt": "2024-08-02T10:33:25Z",
          "updatedAt": "2024-08-02T10:36:38Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nFor each AEAD algorithm, we define the chosen-plaintext confidentiality (IND-CPA) and ciphertext\r\nintegrity (INT-CTXT) advantage roughly as the advantage an attacker has in breaking the\r\n```\r\n\r\nIs this better?",
              "createdAt": "2024-08-02T10:33:26Z",
              "updatedAt": "2024-08-02T10:36:38Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nsucceeding in breaking the IND-CPA (confidentiality) properties of the AEAD scheme.\r\n```",
              "createdAt": "2024-08-02T10:33:56Z",
              "updatedAt": "2024-08-02T10:36:38Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nin breaking the INT-CTXT (integrity) properties of the AEAD scheme. In this document,\r\n```",
              "createdAt": "2024-08-02T10:34:03Z",
              "updatedAt": "2024-08-02T10:36:38Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nbetween IND-CPA (confidentiality), INT-CTXT (integrity),\r\n```",
              "createdAt": "2024-08-02T10:35:24Z",
              "updatedAt": "2024-08-02T10:36:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOD64iO86EErg6",
          "commit": {
            "abbreviatedOid": "5f1a270"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-02T15:09:23Z",
          "updatedAt": "2024-08-02T15:09:23Z",
          "comments": []
        }
      ]
    }
  ]
}